#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PrudentBankSQL")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttexting_deposite(texting_deposite instance);
    partial void Updatetexting_deposite(texting_deposite instance);
    partial void Deletetexting_deposite(texting_deposite instance);
    partial void InsertDepositeWeeklySMSUpdate(DepositeWeeklySMSUpdate instance);
    partial void UpdateDepositeWeeklySMSUpdate(DepositeWeeklySMSUpdate instance);
    partial void DeleteDepositeWeeklySMSUpdate(DepositeWeeklySMSUpdate instance);
    partial void InsertWeeklySME(WeeklySME instance);
    partial void UpdateWeeklySME(WeeklySME instance);
    partial void DeleteWeeklySME(WeeklySME instance);
    partial void InsertBridgeContract(BridgeContract instance);
    partial void UpdateBridgeContract(BridgeContract instance);
    partial void DeleteBridgeContract(BridgeContract instance);
    partial void InsertLoanExtension(LoanExtension instance);
    partial void UpdateLoanExtension(LoanExtension instance);
    partial void DeleteLoanExtension(LoanExtension instance);
    partial void InsertCollateral(Collateral instance);
    partial void UpdateCollateral(Collateral instance);
    partial void DeleteCollateral(Collateral instance);
    partial void InsertWeeklySM(WeeklySM instance);
    partial void UpdateWeeklySM(WeeklySM instance);
    partial void DeleteWeeklySM(WeeklySM instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertZealluckProfit(ZealluckProfit instance);
    partial void UpdateZealluckProfit(ZealluckProfit instance);
    partial void DeleteZealluckProfit(ZealluckProfit instance);
    partial void InsertZealluckProfit1(ZealluckProfit1 instance);
    partial void UpdateZealluckProfit1(ZealluckProfit1 instance);
    partial void DeleteZealluckProfit1(ZealluckProfit1 instance);
    partial void InsertZealTable(ZealTable instance);
    partial void UpdateZealTable(ZealTable instance);
    partial void DeleteZealTable(ZealTable instance);
    partial void InsertFinalProfit(FinalProfit instance);
    partial void UpdateFinalProfit(FinalProfit instance);
    partial void DeleteFinalProfit(FinalProfit instance);
    partial void InsertStaffLogin(StaffLogin instance);
    partial void UpdateStaffLogin(StaffLogin instance);
    partial void DeleteStaffLogin(StaffLogin instance);
    partial void InsertStaffSM(StaffSM instance);
    partial void UpdateStaffSM(StaffSM instance);
    partial void DeleteStaffSM(StaffSM instance);
    partial void InsertNewCustomer(NewCustomer instance);
    partial void UpdateNewCustomer(NewCustomer instance);
    partial void DeleteNewCustomer(NewCustomer instance);
    partial void InsertDefault(Default instance);
    partial void UpdateDefault(Default instance);
    partial void DeleteDefault(Default instance);
    partial void Insertblock(block instance);
    partial void Updateblock(block instance);
    partial void Deleteblock(block instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void Insertmgtfee(mgtfee instance);
    partial void Updatemgtfee(mgtfee instance);
    partial void Deletemgtfee(mgtfee instance);
    partial void InsertSignature(Signature instance);
    partial void UpdateSignature(Signature instance);
    partial void DeleteSignature(Signature instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void InsertAdminUser(AdminUser instance);
    partial void UpdateAdminUser(AdminUser instance);
    partial void DeleteAdminUser(AdminUser instance);
    partial void InsertAdminTable(AdminTable instance);
    partial void UpdateAdminTable(AdminTable instance);
    partial void DeleteAdminTable(AdminTable instance);
    partial void InsertAdminTable1(AdminTable1 instance);
    partial void UpdateAdminTable1(AdminTable1 instance);
    partial void DeleteAdminTable1(AdminTable1 instance);
    partial void InsertChat1(Chat1 instance);
    partial void UpdateChat1(Chat1 instance);
    partial void DeleteChat1(Chat1 instance);
    partial void InsertChat(Chat instance);
    partial void UpdateChat(Chat instance);
    partial void DeleteChat(Chat instance);
    partial void InsertWeeklySME1(WeeklySME1 instance);
    partial void UpdateWeeklySME1(WeeklySME1 instance);
    partial void DeleteWeeklySME1(WeeklySME1 instance);
    partial void InsertAcctFixed(AcctFixed instance);
    partial void UpdateAcctFixed(AcctFixed instance);
    partial void DeleteAcctFixed(AcctFixed instance);
    partial void InsertFieldOfficer(FieldOfficer instance);
    partial void UpdateFieldOfficer(FieldOfficer instance);
    partial void DeleteFieldOfficer(FieldOfficer instance);
    partial void InsertFieldOfficerAmount(FieldOfficerAmount instance);
    partial void UpdateFieldOfficerAmount(FieldOfficerAmount instance);
    partial void DeleteFieldOfficerAmount(FieldOfficerAmount instance);
    partial void InsertDef(Def instance);
    partial void UpdateDef(Def instance);
    partial void DeleteDef(Def instance);
    partial void InsertGuarantory(Guarantory instance);
    partial void UpdateGuarantory(Guarantory instance);
    partial void DeleteGuarantory(Guarantory instance);
    partial void InsertUserTable1(UserTable1 instance);
    partial void UpdateUserTable1(UserTable1 instance);
    partial void DeleteUserTable1(UserTable1 instance);
    partial void InsertLoanPayment(LoanPayment instance);
    partial void UpdateLoanPayment(LoanPayment instance);
    partial void DeleteLoanPayment(LoanPayment instance);
    partial void InsertStaffGuarantor(StaffGuarantor instance);
    partial void UpdateStaffGuarantor(StaffGuarantor instance);
    partial void DeleteStaffGuarantor(StaffGuarantor instance);
    partial void InsertHResourcesUser(HResourcesUser instance);
    partial void UpdateHResourcesUser(HResourcesUser instance);
    partial void DeleteHResourcesUser(HResourcesUser instance);
    partial void InsertLoanUser(LoanUser instance);
    partial void UpdateLoanUser(LoanUser instance);
    partial void DeleteLoanUser(LoanUser instance);
    partial void InsertDepositeUser1(DepositeUser1 instance);
    partial void UpdateDepositeUser1(DepositeUser1 instance);
    partial void DeleteDepositeUser1(DepositeUser1 instance);
    partial void InsertTMTFieldOfficeChatUser(TMTFieldOfficeChatUser instance);
    partial void UpdateTMTFieldOfficeChatUser(TMTFieldOfficeChatUser instance);
    partial void DeleteTMTFieldOfficeChatUser(TMTFieldOfficeChatUser instance);
    partial void InsertWithdrawUser(WithdrawUser instance);
    partial void UpdateWithdrawUser(WithdrawUser instance);
    partial void DeleteWithdrawUser(WithdrawUser instance);
    partial void InsertTMTDateControlLoginUser(TMTDateControlLoginUser instance);
    partial void UpdateTMTDateControlLoginUser(TMTDateControlLoginUser instance);
    partial void DeleteTMTDateControlLoginUser(TMTDateControlLoginUser instance);
    partial void InsertDepositeUser(DepositeUser instance);
    partial void UpdateDepositeUser(DepositeUser instance);
    partial void DeleteDepositeUser(DepositeUser instance);
    partial void InsertCustomerCareUser(CustomerCareUser instance);
    partial void UpdateCustomerCareUser(CustomerCareUser instance);
    partial void DeleteCustomerCareUser(CustomerCareUser instance);
    partial void InsertTMTCheckRecordUser(TMTCheckRecordUser instance);
    partial void UpdateTMTCheckRecordUser(TMTCheckRecordUser instance);
    partial void DeleteTMTCheckRecordUser(TMTCheckRecordUser instance);
    partial void InsertAccountingUser(AccountingUser instance);
    partial void UpdateAccountingUser(AccountingUser instance);
    partial void DeleteAccountingUser(AccountingUser instance);
    partial void InsertTmt(Tmt instance);
    partial void UpdateTmt(Tmt instance);
    partial void DeleteTmt(Tmt instance);
    partial void InsertTmt1(Tmt1 instance);
    partial void UpdateTmt1(Tmt1 instance);
    partial void DeleteTmt1(Tmt1 instance);
    partial void InsertTmt2(Tmt2 instance);
    partial void UpdateTmt2(Tmt2 instance);
    partial void DeleteTmt2(Tmt2 instance);
    partial void InsertTmt3(Tmt3 instance);
    partial void UpdateTmt3(Tmt3 instance);
    partial void DeleteTmt3(Tmt3 instance);
    partial void InsertTmt4(Tmt4 instance);
    partial void UpdateTmt4(Tmt4 instance);
    partial void DeleteTmt4(Tmt4 instance);
    partial void InsertLeave(Leave instance);
    partial void UpdateLeave(Leave instance);
    partial void DeleteLeave(Leave instance);
    partial void InsertSMSAlertProfit(SMSAlertProfit instance);
    partial void UpdateSMSAlertProfit(SMSAlertProfit instance);
    partial void DeleteSMSAlertProfit(SMSAlertProfit instance);
    partial void InsertInitailDeposite(InitailDeposite instance);
    partial void UpdateInitailDeposite(InitailDeposite instance);
    partial void DeleteInitailDeposite(InitailDeposite instance);
    partial void InsertNewCustomerSM(NewCustomerSM instance);
    partial void UpdateNewCustomerSM(NewCustomerSM instance);
    partial void DeleteNewCustomerSM(NewCustomerSM instance);
    partial void InsertUploadPic(UploadPic instance);
    partial void UpdateUploadPic(UploadPic instance);
    partial void DeleteUploadPic(UploadPic instance);
    partial void InsertgreaterValue(greaterValue instance);
    partial void UpdategreaterValue(greaterValue instance);
    partial void DeletegreaterValue(greaterValue instance);
    partial void InsertLoanAlert(LoanAlert instance);
    partial void UpdateLoanAlert(LoanAlert instance);
    partial void DeleteLoanAlert(LoanAlert instance);
    partial void InsertTransactProfit(TransactProfit instance);
    partial void UpdateTransactProfit(TransactProfit instance);
    partial void DeleteTransactProfit(TransactProfit instance);
    partial void InsertComplain(Complain instance);
    partial void UpdateComplain(Complain instance);
    partial void DeleteComplain(Complain instance);
    partial void InsertStaffPost(StaffPost instance);
    partial void UpdateStaffPost(StaffPost instance);
    partial void DeleteStaffPost(StaffPost instance);
    partial void InsertWeeklySMS1(WeeklySMS1 instance);
    partial void UpdateWeeklySMS1(WeeklySMS1 instance);
    partial void DeleteWeeklySMS1(WeeklySMS1 instance);
    partial void InsertYearlyAnalysi(YearlyAnalysi instance);
    partial void UpdateYearlyAnalysi(YearlyAnalysi instance);
    partial void DeleteYearlyAnalysi(YearlyAnalysi instance);
    partial void InsertAccountTill(AccountTill instance);
    partial void UpdateAccountTill(AccountTill instance);
    partial void DeleteAccountTill(AccountTill instance);
    partial void InsertTellerTill(TellerTill instance);
    partial void UpdateTellerTill(TellerTill instance);
    partial void DeleteTellerTill(TellerTill instance);
    partial void InsertLoanElapse(LoanElapse instance);
    partial void UpdateLoanElapse(LoanElapse instance);
    partial void DeleteLoanElapse(LoanElapse instance);
    partial void InsertAddBranch(AddBranch instance);
    partial void UpdateAddBranch(AddBranch instance);
    partial void DeleteAddBranch(AddBranch instance);
    partial void InsertAccountType(AccountType instance);
    partial void UpdateAccountType(AccountType instance);
    partial void DeleteAccountType(AccountType instance);
    partial void InsertUserTable(UserTable instance);
    partial void UpdateUserTable(UserTable instance);
    partial void DeleteUserTable(UserTable instance);
    partial void InsertWithdraw(Withdraw instance);
    partial void UpdateWithdraw(Withdraw instance);
    partial void DeleteWithdraw(Withdraw instance);
    partial void InsertBirthday(Birthday instance);
    partial void UpdateBirthday(Birthday instance);
    partial void DeleteBirthday(Birthday instance);
    partial void InsertEmergency(Emergency instance);
    partial void UpdateEmergency(Emergency instance);
    partial void DeleteEmergency(Emergency instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertDormantAccount(DormantAccount instance);
    partial void UpdateDormantAccount(DormantAccount instance);
    partial void DeleteDormantAccount(DormantAccount instance);
    partial void InsertPerformance(Performance instance);
    partial void UpdatePerformance(Performance instance);
    partial void DeletePerformance(Performance instance);
    partial void InsertDeposite(Deposite instance);
    partial void UpdateDeposite(Deposite instance);
    partial void DeleteDeposite(Deposite instance);
    partial void InsertInventory(Inventory instance);
    partial void UpdateInventory(Inventory instance);
    partial void DeleteInventory(Inventory instance);
    partial void InsertFreezAcount(FreezAcount instance);
    partial void UpdateFreezAcount(FreezAcount instance);
    partial void DeleteFreezAcount(FreezAcount instance);
    partial void InsertTransactProfit2(TransactProfit2 instance);
    partial void UpdateTransactProfit2(TransactProfit2 instance);
    partial void DeleteTransactProfit2(TransactProfit2 instance);
    partial void InsertYearlyProfit(YearlyProfit instance);
    partial void UpdateYearlyProfit(YearlyProfit instance);
    partial void DeleteYearlyProfit(YearlyProfit instance);
    partial void InsertNewAcount(NewAcount instance);
    partial void UpdateNewAcount(NewAcount instance);
    partial void DeleteNewAcount(NewAcount instance);
    partial void InsertBuckFixedSMS1(BuckFixedSMS1 instance);
    partial void UpdateBuckFixedSMS1(BuckFixedSMS1 instance);
    partial void DeleteBuckFixedSMS1(BuckFixedSMS1 instance);
    partial void InsertSmsProfit(SmsProfit instance);
    partial void UpdateSmsProfit(SmsProfit instance);
    partial void DeleteSmsProfit(SmsProfit instance);
    partial void InsertBuckFixedSM(BuckFixedSM instance);
    partial void UpdateBuckFixedSM(BuckFixedSM instance);
    partial void DeleteBuckFixedSM(BuckFixedSM instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertLoanInterest(LoanInterest instance);
    partial void UpdateLoanInterest(LoanInterest instance);
    partial void DeleteLoanInterest(LoanInterest instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PrudentBankSQLConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<texting_deposite> texting_deposites
		{
			get
			{
				return this.GetTable<texting_deposite>();
			}
		}
		
		public System.Data.Linq.Table<DepositeWeeklySMSUpdate> DepositeWeeklySMSUpdates
		{
			get
			{
				return this.GetTable<DepositeWeeklySMSUpdate>();
			}
		}
		
		public System.Data.Linq.Table<WeeklySME> WeeklySMEs
		{
			get
			{
				return this.GetTable<WeeklySME>();
			}
		}
		
		public System.Data.Linq.Table<BridgeContract> BridgeContracts
		{
			get
			{
				return this.GetTable<BridgeContract>();
			}
		}
		
		public System.Data.Linq.Table<LoanExtension> LoanExtensions
		{
			get
			{
				return this.GetTable<LoanExtension>();
			}
		}
		
		public System.Data.Linq.Table<Collateral> Collaterals
		{
			get
			{
				return this.GetTable<Collateral>();
			}
		}
		
		public System.Data.Linq.Table<WeeklySM> WeeklySMs
		{
			get
			{
				return this.GetTable<WeeklySM>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<ZealluckProfit> ZealluckProfits
		{
			get
			{
				return this.GetTable<ZealluckProfit>();
			}
		}
		
		public System.Data.Linq.Table<ZealluckProfit1> ZealluckProfit1s
		{
			get
			{
				return this.GetTable<ZealluckProfit1>();
			}
		}
		
		public System.Data.Linq.Table<ZealTable> ZealTables
		{
			get
			{
				return this.GetTable<ZealTable>();
			}
		}
		
		public System.Data.Linq.Table<FinalProfit> FinalProfits
		{
			get
			{
				return this.GetTable<FinalProfit>();
			}
		}
		
		public System.Data.Linq.Table<StaffLogin> StaffLogins
		{
			get
			{
				return this.GetTable<StaffLogin>();
			}
		}
		
		public System.Data.Linq.Table<StaffSM> StaffSMs
		{
			get
			{
				return this.GetTable<StaffSM>();
			}
		}
		
		public System.Data.Linq.Table<NewCustomer> NewCustomers
		{
			get
			{
				return this.GetTable<NewCustomer>();
			}
		}
		
		public System.Data.Linq.Table<Default> Defaults
		{
			get
			{
				return this.GetTable<Default>();
			}
		}
		
		public System.Data.Linq.Table<block> blocks
		{
			get
			{
				return this.GetTable<block>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<mgtfee> mgtfees
		{
			get
			{
				return this.GetTable<mgtfee>();
			}
		}
		
		public System.Data.Linq.Table<Signature> Signatures
		{
			get
			{
				return this.GetTable<Signature>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfers
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<AdminUser> AdminUsers
		{
			get
			{
				return this.GetTable<AdminUser>();
			}
		}
		
		public System.Data.Linq.Table<AdminTable> AdminTables
		{
			get
			{
				return this.GetTable<AdminTable>();
			}
		}
		
		public System.Data.Linq.Table<AdminTable1> AdminTable1s
		{
			get
			{
				return this.GetTable<AdminTable1>();
			}
		}
		
		public System.Data.Linq.Table<Chat1> Chat1s
		{
			get
			{
				return this.GetTable<Chat1>();
			}
		}
		
		public System.Data.Linq.Table<Chat> Chats
		{
			get
			{
				return this.GetTable<Chat>();
			}
		}
		
		public System.Data.Linq.Table<WeeklySME1> WeeklySME1s
		{
			get
			{
				return this.GetTable<WeeklySME1>();
			}
		}
		
		public System.Data.Linq.Table<AcctFixed> AcctFixeds
		{
			get
			{
				return this.GetTable<AcctFixed>();
			}
		}
		
		public System.Data.Linq.Table<FieldOfficer> FieldOfficers
		{
			get
			{
				return this.GetTable<FieldOfficer>();
			}
		}
		
		public System.Data.Linq.Table<FieldOfficerAmount> FieldOfficerAmounts
		{
			get
			{
				return this.GetTable<FieldOfficerAmount>();
			}
		}
		
		public System.Data.Linq.Table<Def> Defs
		{
			get
			{
				return this.GetTable<Def>();
			}
		}
		
		public System.Data.Linq.Table<Guarantory> Guarantories
		{
			get
			{
				return this.GetTable<Guarantory>();
			}
		}
		
		public System.Data.Linq.Table<UserTable1> UserTable1s
		{
			get
			{
				return this.GetTable<UserTable1>();
			}
		}
		
		public System.Data.Linq.Table<LoanPayment> LoanPayments
		{
			get
			{
				return this.GetTable<LoanPayment>();
			}
		}
		
		public System.Data.Linq.Table<StaffGuarantor> StaffGuarantors
		{
			get
			{
				return this.GetTable<StaffGuarantor>();
			}
		}
		
		public System.Data.Linq.Table<HResourcesUser> HResourcesUsers
		{
			get
			{
				return this.GetTable<HResourcesUser>();
			}
		}
		
		public System.Data.Linq.Table<LoanUser> LoanUsers
		{
			get
			{
				return this.GetTable<LoanUser>();
			}
		}
		
		public System.Data.Linq.Table<DepositeUser1> DepositeUser1s
		{
			get
			{
				return this.GetTable<DepositeUser1>();
			}
		}
		
		public System.Data.Linq.Table<TMTFieldOfficeChatUser> TMTFieldOfficeChatUsers
		{
			get
			{
				return this.GetTable<TMTFieldOfficeChatUser>();
			}
		}
		
		public System.Data.Linq.Table<WithdrawUser> WithdrawUsers
		{
			get
			{
				return this.GetTable<WithdrawUser>();
			}
		}
		
		public System.Data.Linq.Table<TMTDateControlLoginUser> TMTDateControlLoginUsers
		{
			get
			{
				return this.GetTable<TMTDateControlLoginUser>();
			}
		}
		
		public System.Data.Linq.Table<DepositeUser> DepositeUsers
		{
			get
			{
				return this.GetTable<DepositeUser>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCareUser> CustomerCareUsers
		{
			get
			{
				return this.GetTable<CustomerCareUser>();
			}
		}
		
		public System.Data.Linq.Table<TMTCheckRecordUser> TMTCheckRecordUsers
		{
			get
			{
				return this.GetTable<TMTCheckRecordUser>();
			}
		}
		
		public System.Data.Linq.Table<AccountingUser> AccountingUsers
		{
			get
			{
				return this.GetTable<AccountingUser>();
			}
		}
		
		public System.Data.Linq.Table<Tmt> Tmts
		{
			get
			{
				return this.GetTable<Tmt>();
			}
		}
		
		public System.Data.Linq.Table<Tmt1> Tmt1s
		{
			get
			{
				return this.GetTable<Tmt1>();
			}
		}
		
		public System.Data.Linq.Table<Tmt2> Tmt2s
		{
			get
			{
				return this.GetTable<Tmt2>();
			}
		}
		
		public System.Data.Linq.Table<Tmt3> Tmt3s
		{
			get
			{
				return this.GetTable<Tmt3>();
			}
		}
		
		public System.Data.Linq.Table<Tmt4> Tmt4s
		{
			get
			{
				return this.GetTable<Tmt4>();
			}
		}
		
		public System.Data.Linq.Table<Leave> Leaves
		{
			get
			{
				return this.GetTable<Leave>();
			}
		}
		
		public System.Data.Linq.Table<SMSAlertProfit> SMSAlertProfits
		{
			get
			{
				return this.GetTable<SMSAlertProfit>();
			}
		}
		
		public System.Data.Linq.Table<InitailDeposite> InitailDeposites
		{
			get
			{
				return this.GetTable<InitailDeposite>();
			}
		}
		
		public System.Data.Linq.Table<NewCustomerSM> NewCustomerSMs
		{
			get
			{
				return this.GetTable<NewCustomerSM>();
			}
		}
		
		public System.Data.Linq.Table<UploadPic> UploadPics
		{
			get
			{
				return this.GetTable<UploadPic>();
			}
		}
		
		public System.Data.Linq.Table<greaterValue> greaterValues
		{
			get
			{
				return this.GetTable<greaterValue>();
			}
		}
		
		public System.Data.Linq.Table<LoanAlert> LoanAlerts
		{
			get
			{
				return this.GetTable<LoanAlert>();
			}
		}
		
		public System.Data.Linq.Table<TransactProfit> TransactProfits
		{
			get
			{
				return this.GetTable<TransactProfit>();
			}
		}
		
		public System.Data.Linq.Table<Complain> Complains
		{
			get
			{
				return this.GetTable<Complain>();
			}
		}
		
		public System.Data.Linq.Table<StaffPost> StaffPosts
		{
			get
			{
				return this.GetTable<StaffPost>();
			}
		}
		
		public System.Data.Linq.Table<WeeklySMS1> WeeklySMS1s
		{
			get
			{
				return this.GetTable<WeeklySMS1>();
			}
		}
		
		public System.Data.Linq.Table<YearlyAnalysi> YearlyAnalysis
		{
			get
			{
				return this.GetTable<YearlyAnalysi>();
			}
		}
		
		public System.Data.Linq.Table<AccountTill> AccountTills
		{
			get
			{
				return this.GetTable<AccountTill>();
			}
		}
		
		public System.Data.Linq.Table<TellerTill> TellerTills
		{
			get
			{
				return this.GetTable<TellerTill>();
			}
		}
		
		public System.Data.Linq.Table<LoanElapse> LoanElapses
		{
			get
			{
				return this.GetTable<LoanElapse>();
			}
		}
		
		public System.Data.Linq.Table<AddBranch> AddBranches
		{
			get
			{
				return this.GetTable<AddBranch>();
			}
		}
		
		public System.Data.Linq.Table<AccountType> AccountTypes
		{
			get
			{
				return this.GetTable<AccountType>();
			}
		}
		
		public System.Data.Linq.Table<UserTable> UserTables
		{
			get
			{
				return this.GetTable<UserTable>();
			}
		}
		
		public System.Data.Linq.Table<Withdraw> Withdraws
		{
			get
			{
				return this.GetTable<Withdraw>();
			}
		}
		
		public System.Data.Linq.Table<Birthday> Birthdays
		{
			get
			{
				return this.GetTable<Birthday>();
			}
		}
		
		public System.Data.Linq.Table<Emergency> Emergencies
		{
			get
			{
				return this.GetTable<Emergency>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<DormantAccount> DormantAccounts
		{
			get
			{
				return this.GetTable<DormantAccount>();
			}
		}
		
		public System.Data.Linq.Table<Performance> Performances
		{
			get
			{
				return this.GetTable<Performance>();
			}
		}
		
		public System.Data.Linq.Table<Deposite> Deposites
		{
			get
			{
				return this.GetTable<Deposite>();
			}
		}
		
		public System.Data.Linq.Table<Inventory> Inventories
		{
			get
			{
				return this.GetTable<Inventory>();
			}
		}
		
		public System.Data.Linq.Table<FreezAcount> FreezAcounts
		{
			get
			{
				return this.GetTable<FreezAcount>();
			}
		}
		
		public System.Data.Linq.Table<TransactProfit2> TransactProfit2s
		{
			get
			{
				return this.GetTable<TransactProfit2>();
			}
		}
		
		public System.Data.Linq.Table<YearlyProfit> YearlyProfits
		{
			get
			{
				return this.GetTable<YearlyProfit>();
			}
		}
		
		public System.Data.Linq.Table<NewAcount> NewAcounts
		{
			get
			{
				return this.GetTable<NewAcount>();
			}
		}
		
		public System.Data.Linq.Table<BuckFixedSMS1> BuckFixedSMS1s
		{
			get
			{
				return this.GetTable<BuckFixedSMS1>();
			}
		}
		
		public System.Data.Linq.Table<SmsProfit> SmsProfits
		{
			get
			{
				return this.GetTable<SmsProfit>();
			}
		}
		
		public System.Data.Linq.Table<BuckFixedSM> BuckFixedSMs
		{
			get
			{
				return this.GetTable<BuckFixedSM>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<LoanInterest> LoanInterests
		{
			get
			{
				return this.GetTable<LoanInterest>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.texting_deposite")]
	public partial class texting_deposite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _customerid;
		
		private string _msg;
		
		private string _accountno;
		
		private string _phoneno;
		
		private System.Nullable<double> _depositebalance;
		
		private string _date;
		
		private System.Nullable<double> _depositecollect;
		
		private string _smsid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomeridChanging(System.Nullable<double> value);
    partial void OncustomeridChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnaccountnoChanging(string value);
    partial void OnaccountnoChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OndepositebalanceChanging(System.Nullable<double> value);
    partial void OndepositebalanceChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OndepositecollectChanging(System.Nullable<double> value);
    partial void OndepositecollectChanged();
    partial void OnsmsidChanging(string value);
    partial void OnsmsidChanged();
    #endregion
		
		public texting_deposite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerid", DbType="Float")]
		public System.Nullable<double> customerid
		{
			get
			{
				return this._customerid;
			}
			set
			{
				if ((this._customerid != value))
				{
					this.OncustomeridChanging(value);
					this.SendPropertyChanging();
					this._customerid = value;
					this.SendPropertyChanged("customerid");
					this.OncustomeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg", DbType="VarChar(200)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountno", DbType="VarChar(200)")]
		public string accountno
		{
			get
			{
				return this._accountno;
			}
			set
			{
				if ((this._accountno != value))
				{
					this.OnaccountnoChanging(value);
					this.SendPropertyChanging();
					this._accountno = value;
					this.SendPropertyChanged("accountno");
					this.OnaccountnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(200)")]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositebalance", DbType="Float")]
		public System.Nullable<double> depositebalance
		{
			get
			{
				return this._depositebalance;
			}
			set
			{
				if ((this._depositebalance != value))
				{
					this.OndepositebalanceChanging(value);
					this.SendPropertyChanging();
					this._depositebalance = value;
					this.SendPropertyChanged("depositebalance");
					this.OndepositebalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(200)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositecollect", DbType="Float")]
		public System.Nullable<double> depositecollect
		{
			get
			{
				return this._depositecollect;
			}
			set
			{
				if ((this._depositecollect != value))
				{
					this.OndepositecollectChanging(value);
					this.SendPropertyChanging();
					this._depositecollect = value;
					this.SendPropertyChanged("depositecollect");
					this.OndepositecollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smsid", DbType="VarChar(50)")]
		public string smsid
		{
			get
			{
				return this._smsid;
			}
			set
			{
				if ((this._smsid != value))
				{
					this.OnsmsidChanging(value);
					this.SendPropertyChanging();
					this._smsid = value;
					this.SendPropertyChanged("smsid");
					this.OnsmsidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepositeWeeklySMSUpdate")]
	public partial class DepositeWeeklySMSUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _SMSUpdate;
		
		private string _SMSId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSMSUpdateChanging(string value);
    partial void OnSMSUpdateChanged();
    partial void OnSMSIdChanging(string value);
    partial void OnSMSIdChanged();
    #endregion
		
		public DepositeWeeklySMSUpdate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSUpdate", DbType="VarChar(150)")]
		public string SMSUpdate
		{
			get
			{
				return this._SMSUpdate;
			}
			set
			{
				if ((this._SMSUpdate != value))
				{
					this.OnSMSUpdateChanging(value);
					this.SendPropertyChanging();
					this._SMSUpdate = value;
					this.SendPropertyChanged("SMSUpdate");
					this.OnSMSUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSId", DbType="VarChar(150)")]
		public string SMSId
		{
			get
			{
				return this._SMSId;
			}
			set
			{
				if ((this._SMSId != value))
				{
					this.OnSMSIdChanging(value);
					this.SendPropertyChanging();
					this._SMSId = value;
					this.SendPropertyChanged("SMSId");
					this.OnSMSIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeeklySME")]
	public partial class WeeklySME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _SMSUpdate;
		
		private System.Nullable<int> _SMSId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSMSUpdateChanging(string value);
    partial void OnSMSUpdateChanged();
    partial void OnSMSIdChanging(System.Nullable<int> value);
    partial void OnSMSIdChanged();
    #endregion
		
		public WeeklySME()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSUpdate", DbType="VarChar(140)")]
		public string SMSUpdate
		{
			get
			{
				return this._SMSUpdate;
			}
			set
			{
				if ((this._SMSUpdate != value))
				{
					this.OnSMSUpdateChanging(value);
					this.SendPropertyChanging();
					this._SMSUpdate = value;
					this.SendPropertyChanged("SMSUpdate");
					this.OnSMSUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSId", DbType="Int")]
		public System.Nullable<int> SMSId
		{
			get
			{
				return this._SMSId;
			}
			set
			{
				if ((this._SMSId != value))
				{
					this.OnSMSIdChanging(value);
					this.SendPropertyChanging();
					this._SMSId = value;
					this.SendPropertyChanged("SMSId");
					this.OnSMSIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BridgeContract")]
	public partial class BridgeContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ContractBridge;
		
		private System.Nullable<int> _NoOfMonthRemaining;
		
		private string _ContractNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnContractBridgeChanging(string value);
    partial void OnContractBridgeChanged();
    partial void OnNoOfMonthRemainingChanging(System.Nullable<int> value);
    partial void OnNoOfMonthRemainingChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    #endregion
		
		public BridgeContract()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractBridge", DbType="VarChar(50)")]
		public string ContractBridge
		{
			get
			{
				return this._ContractBridge;
			}
			set
			{
				if ((this._ContractBridge != value))
				{
					this.OnContractBridgeChanging(value);
					this.SendPropertyChanging();
					this._ContractBridge = value;
					this.SendPropertyChanged("ContractBridge");
					this.OnContractBridgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfMonthRemaining", DbType="Int")]
		public System.Nullable<int> NoOfMonthRemaining
		{
			get
			{
				return this._NoOfMonthRemaining;
			}
			set
			{
				if ((this._NoOfMonthRemaining != value))
				{
					this.OnNoOfMonthRemainingChanging(value);
					this.SendPropertyChanging();
					this._NoOfMonthRemaining = value;
					this.SendPropertyChanged("NoOfMonthRemaining");
					this.OnNoOfMonthRemainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(50)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanExtension")]
	public partial class LoanExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CurentBalanceToBePaid;
		
		private string _ExtendedDuration;
		
		private string _ContractNo;
		
		private string _OriginalLoanFacility;
		
		private string _TotalDepositeAsAtDate;
		
		private string _RemainingBalanceAtExpiration;
		
		private string _Centage;
		
		private string _AddedInterest;
		
		private string _ContractDate1;
		
		private string _ContractDate2;
		
		private string _TotalLoanRollOver;
		
		private string _FullName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCurentBalanceToBePaidChanging(string value);
    partial void OnCurentBalanceToBePaidChanged();
    partial void OnExtendedDurationChanging(string value);
    partial void OnExtendedDurationChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnOriginalLoanFacilityChanging(string value);
    partial void OnOriginalLoanFacilityChanged();
    partial void OnTotalDepositeAsAtDateChanging(string value);
    partial void OnTotalDepositeAsAtDateChanged();
    partial void OnRemainingBalanceAtExpirationChanging(string value);
    partial void OnRemainingBalanceAtExpirationChanged();
    partial void OnCentageChanging(string value);
    partial void OnCentageChanged();
    partial void OnAddedInterestChanging(string value);
    partial void OnAddedInterestChanged();
    partial void OnContractDate1Changing(string value);
    partial void OnContractDate1Changed();
    partial void OnContractDate2Changing(string value);
    partial void OnContractDate2Changed();
    partial void OnTotalLoanRollOverChanging(string value);
    partial void OnTotalLoanRollOverChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public LoanExtension()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurentBalanceToBePaid", DbType="VarChar(120)")]
		public string CurentBalanceToBePaid
		{
			get
			{
				return this._CurentBalanceToBePaid;
			}
			set
			{
				if ((this._CurentBalanceToBePaid != value))
				{
					this.OnCurentBalanceToBePaidChanging(value);
					this.SendPropertyChanging();
					this._CurentBalanceToBePaid = value;
					this.SendPropertyChanged("CurentBalanceToBePaid");
					this.OnCurentBalanceToBePaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedDuration", DbType="VarChar(120)")]
		public string ExtendedDuration
		{
			get
			{
				return this._ExtendedDuration;
			}
			set
			{
				if ((this._ExtendedDuration != value))
				{
					this.OnExtendedDurationChanging(value);
					this.SendPropertyChanging();
					this._ExtendedDuration = value;
					this.SendPropertyChanged("ExtendedDuration");
					this.OnExtendedDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(120)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalLoanFacility", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string OriginalLoanFacility
		{
			get
			{
				return this._OriginalLoanFacility;
			}
			set
			{
				if ((this._OriginalLoanFacility != value))
				{
					this.OnOriginalLoanFacilityChanging(value);
					this.SendPropertyChanging();
					this._OriginalLoanFacility = value;
					this.SendPropertyChanged("OriginalLoanFacility");
					this.OnOriginalLoanFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDepositeAsAtDate", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string TotalDepositeAsAtDate
		{
			get
			{
				return this._TotalDepositeAsAtDate;
			}
			set
			{
				if ((this._TotalDepositeAsAtDate != value))
				{
					this.OnTotalDepositeAsAtDateChanging(value);
					this.SendPropertyChanging();
					this._TotalDepositeAsAtDate = value;
					this.SendPropertyChanged("TotalDepositeAsAtDate");
					this.OnTotalDepositeAsAtDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemainingBalanceAtExpiration", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string RemainingBalanceAtExpiration
		{
			get
			{
				return this._RemainingBalanceAtExpiration;
			}
			set
			{
				if ((this._RemainingBalanceAtExpiration != value))
				{
					this.OnRemainingBalanceAtExpirationChanging(value);
					this.SendPropertyChanging();
					this._RemainingBalanceAtExpiration = value;
					this.SendPropertyChanged("RemainingBalanceAtExpiration");
					this.OnRemainingBalanceAtExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Centage", DbType="VarChar(120)")]
		public string Centage
		{
			get
			{
				return this._Centage;
			}
			set
			{
				if ((this._Centage != value))
				{
					this.OnCentageChanging(value);
					this.SendPropertyChanging();
					this._Centage = value;
					this.SendPropertyChanged("Centage");
					this.OnCentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedInterest", DbType="VarChar(120)")]
		public string AddedInterest
		{
			get
			{
				return this._AddedInterest;
			}
			set
			{
				if ((this._AddedInterest != value))
				{
					this.OnAddedInterestChanging(value);
					this.SendPropertyChanging();
					this._AddedInterest = value;
					this.SendPropertyChanged("AddedInterest");
					this.OnAddedInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate1", DbType="VarChar(120)")]
		public string ContractDate1
		{
			get
			{
				return this._ContractDate1;
			}
			set
			{
				if ((this._ContractDate1 != value))
				{
					this.OnContractDate1Changing(value);
					this.SendPropertyChanging();
					this._ContractDate1 = value;
					this.SendPropertyChanged("ContractDate1");
					this.OnContractDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate2", DbType="VarChar(120)")]
		public string ContractDate2
		{
			get
			{
				return this._ContractDate2;
			}
			set
			{
				if ((this._ContractDate2 != value))
				{
					this.OnContractDate2Changing(value);
					this.SendPropertyChanging();
					this._ContractDate2 = value;
					this.SendPropertyChanged("ContractDate2");
					this.OnContractDate2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLoanRollOver", DbType="VarChar(120)")]
		public string TotalLoanRollOver
		{
			get
			{
				return this._TotalLoanRollOver;
			}
			set
			{
				if ((this._TotalLoanRollOver != value))
				{
					this.OnTotalLoanRollOverChanging(value);
					this.SendPropertyChanging();
					this._TotalLoanRollOver = value;
					this.SendPropertyChanged("TotalLoanRollOver");
					this.OnTotalLoanRollOverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collateral")]
	public partial class Collateral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ContractNo;
		
		private string _Propic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    #endregion
		
		public Collateral()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(50)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(150)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeeklySMS")]
	public partial class WeeklySM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _customerid;
		
		private string _msg;
		
		private string _accountno;
		
		private string _phoneno;
		
		private System.Nullable<double> _depositebalance;
		
		private string _date;
		
		private System.Nullable<double> _depositecollect;
		
		private string _smsid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomeridChanging(string value);
    partial void OncustomeridChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnaccountnoChanging(string value);
    partial void OnaccountnoChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OndepositebalanceChanging(System.Nullable<double> value);
    partial void OndepositebalanceChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OndepositecollectChanging(System.Nullable<double> value);
    partial void OndepositecollectChanged();
    partial void OnsmsidChanging(string value);
    partial void OnsmsidChanged();
    #endregion
		
		public WeeklySM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerid", DbType="VarChar(200)")]
		public string customerid
		{
			get
			{
				return this._customerid;
			}
			set
			{
				if ((this._customerid != value))
				{
					this.OncustomeridChanging(value);
					this.SendPropertyChanging();
					this._customerid = value;
					this.SendPropertyChanged("customerid");
					this.OncustomeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg", DbType="VarChar(200)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountno", DbType="VarChar(200)")]
		public string accountno
		{
			get
			{
				return this._accountno;
			}
			set
			{
				if ((this._accountno != value))
				{
					this.OnaccountnoChanging(value);
					this.SendPropertyChanging();
					this._accountno = value;
					this.SendPropertyChanged("accountno");
					this.OnaccountnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(200)")]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositebalance", DbType="Float")]
		public System.Nullable<double> depositebalance
		{
			get
			{
				return this._depositebalance;
			}
			set
			{
				if ((this._depositebalance != value))
				{
					this.OndepositebalanceChanging(value);
					this.SendPropertyChanging();
					this._depositebalance = value;
					this.SendPropertyChanged("depositebalance");
					this.OndepositebalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(200)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositecollect", DbType="Float")]
		public System.Nullable<double> depositecollect
		{
			get
			{
				return this._depositecollect;
			}
			set
			{
				if ((this._depositecollect != value))
				{
					this.OndepositecollectChanging(value);
					this.SendPropertyChanging();
					this._depositecollect = value;
					this.SendPropertyChanged("depositecollect");
					this.OndepositecollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smsid", DbType="VarChar(200)")]
		public string smsid
		{
			get
			{
				return this._smsid;
			}
			set
			{
				if ((this._smsid != value))
				{
					this.OnsmsidChanging(value);
					this.SendPropertyChanging();
					this._smsid = value;
					this.SendPropertyChanged("smsid");
					this.OnsmsidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CustomerId;
		
		private string _Branch;
		
		private string _FieldOfficer;
		
		private string _AccountNo;
		
		private string _PageNumber;
		
		private string _Date;
		
		private string _PhoneNo;
		
		private string _ChartNo;
		
		private string _Deposite_Withdraw;
		
		private string _PostedBy;
		
		private string _SMSCharge;
		
		private string _MonthYear;
		
		private string _AccountBalance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnPageNumberChanging(string value);
    partial void OnPageNumberChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnChartNoChanging(string value);
    partial void OnChartNoChanged();
    partial void OnDeposite_WithdrawChanging(string value);
    partial void OnDeposite_WithdrawChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnSMSChargeChanging(string value);
    partial void OnSMSChargeChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    partial void OnAccountBalanceChanging(string value);
    partial void OnAccountBalanceChanged();
    #endregion
		
		public Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="VarChar(200)")]
		public string CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(200)")]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(200)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNumber", DbType="VarChar(200)")]
		public string PageNumber
		{
			get
			{
				return this._PageNumber;
			}
			set
			{
				if ((this._PageNumber != value))
				{
					this.OnPageNumberChanging(value);
					this.SendPropertyChanging();
					this._PageNumber = value;
					this.SendPropertyChanged("PageNumber");
					this.OnPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(200)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartNo", DbType="VarChar(200)")]
		public string ChartNo
		{
			get
			{
				return this._ChartNo;
			}
			set
			{
				if ((this._ChartNo != value))
				{
					this.OnChartNoChanging(value);
					this.SendPropertyChanging();
					this._ChartNo = value;
					this.SendPropertyChanged("ChartNo");
					this.OnChartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deposite_Withdraw", DbType="VarChar(200)")]
		public string Deposite_Withdraw
		{
			get
			{
				return this._Deposite_Withdraw;
			}
			set
			{
				if ((this._Deposite_Withdraw != value))
				{
					this.OnDeposite_WithdrawChanging(value);
					this.SendPropertyChanging();
					this._Deposite_Withdraw = value;
					this.SendPropertyChanged("Deposite_Withdraw");
					this.OnDeposite_WithdrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(200)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSCharge", DbType="VarChar(200)")]
		public string SMSCharge
		{
			get
			{
				return this._SMSCharge;
			}
			set
			{
				if ((this._SMSCharge != value))
				{
					this.OnSMSChargeChanging(value);
					this.SendPropertyChanging();
					this._SMSCharge = value;
					this.SendPropertyChanged("SMSCharge");
					this.OnSMSChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(200)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="VarChar(200)")]
		public string AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZealluckProfit")]
	public partial class ZealluckProfit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MonthYear;
		
		private string _MonthlyProfit;
		
		private string _AccountNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    partial void OnMonthlyProfitChanging(string value);
    partial void OnMonthlyProfitChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    #endregion
		
		public ZealluckProfit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(150)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyProfit", DbType="VarChar(150)")]
		public string MonthlyProfit
		{
			get
			{
				return this._MonthlyProfit;
			}
			set
			{
				if ((this._MonthlyProfit != value))
				{
					this.OnMonthlyProfitChanging(value);
					this.SendPropertyChanging();
					this._MonthlyProfit = value;
					this.SendPropertyChanged("MonthlyProfit");
					this.OnMonthlyProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(150)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZealluckProfit1")]
	public partial class ZealluckProfit1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MonthYear;
		
		private string _MonthlyProfit;
		
		private string _AccountNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    partial void OnMonthlyProfitChanging(string value);
    partial void OnMonthlyProfitChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    #endregion
		
		public ZealluckProfit1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(50)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyProfit", DbType="VarChar(50)")]
		public string MonthlyProfit
		{
			get
			{
				return this._MonthlyProfit;
			}
			set
			{
				if ((this._MonthlyProfit != value))
				{
					this.OnMonthlyProfitChanging(value);
					this.SendPropertyChanging();
					this._MonthlyProfit = value;
					this.SendPropertyChanged("MonthlyProfit");
					this.OnMonthlyProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZealTable")]
	public partial class ZealTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Endate;
		
		private string _DateId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEndateChanging(string value);
    partial void OnEndateChanged();
    partial void OnDateIdChanging(string value);
    partial void OnDateIdChanged();
    #endregion
		
		public ZealTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endate", DbType="VarChar(50)")]
		public string Endate
		{
			get
			{
				return this._Endate;
			}
			set
			{
				if ((this._Endate != value))
				{
					this.OnEndateChanging(value);
					this.SendPropertyChanging();
					this._Endate = value;
					this.SendPropertyChanged("Endate");
					this.OnEndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateId", DbType="VarChar(50)")]
		public string DateId
		{
			get
			{
				return this._DateId;
			}
			set
			{
				if ((this._DateId != value))
				{
					this.OnDateIdChanging(value);
					this.SendPropertyChanging();
					this._DateId = value;
					this.SendPropertyChanged("DateId");
					this.OnDateIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinalProfit")]
	public partial class FinalProfit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Gain;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnGainChanging(string value);
    partial void OnGainChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public FinalProfit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gain", DbType="VarChar(50)")]
		public string Gain
		{
			get
			{
				return this._Gain;
			}
			set
			{
				if ((this._Gain != value))
				{
					this.OnGainChanging(value);
					this.SendPropertyChanging();
					this._Gain = value;
					this.SendPropertyChanged("Gain");
					this.OnGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(150)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffLogin")]
	public partial class StaffLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private string _PassWord;
		
		private string _Active;
		
		private string _EveryOne;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryOneChanging(string value);
    partial void OnEveryOneChanged();
    #endregion
		
		public StaffLogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(150)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(150)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(150)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EveryOne", DbType="VarChar(50)")]
		public string EveryOne
		{
			get
			{
				return this._EveryOne;
			}
			set
			{
				if ((this._EveryOne != value))
				{
					this.OnEveryOneChanging(value);
					this.SendPropertyChanging();
					this._EveryOne = value;
					this.SendPropertyChanged("EveryOne");
					this.OnEveryOneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffSMS")]
	public partial class StaffSM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PhoneNo;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public StaffSM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(150)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(150)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewCustomer")]
	public partial class NewCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _occupation;
		
		private string _branch;
		
		private string _fieldofficer;
		
		private string _customerid;
		
		private string _gender;
		
		private string _nationality;
		
		private string _date;
		
		private string _selfemploy;
		
		private string _dateofbirth;
		
		private string _customername;
		
		private string _address;
		
		private string _phoneno;
		
		private string _status;
		
		private string _state;
		
		private string _email;
		
		private string _accountno;
		
		private string _propic;
		
		private System.Nullable<int> _SmsId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoccupationChanging(string value);
    partial void OnoccupationChanged();
    partial void OnbranchChanging(string value);
    partial void OnbranchChanged();
    partial void OnfieldofficerChanging(string value);
    partial void OnfieldofficerChanged();
    partial void OncustomeridChanging(string value);
    partial void OncustomeridChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnnationalityChanging(string value);
    partial void OnnationalityChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnselfemployChanging(string value);
    partial void OnselfemployChanged();
    partial void OndateofbirthChanging(string value);
    partial void OndateofbirthChanged();
    partial void OncustomernameChanging(string value);
    partial void OncustomernameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaccountnoChanging(string value);
    partial void OnaccountnoChanged();
    partial void OnpropicChanging(string value);
    partial void OnpropicChanged();
    partial void OnSmsIdChanging(System.Nullable<int> value);
    partial void OnSmsIdChanged();
    #endregion
		
		public NewCustomer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_occupation", DbType="VarChar(120)")]
		public string occupation
		{
			get
			{
				return this._occupation;
			}
			set
			{
				if ((this._occupation != value))
				{
					this.OnoccupationChanging(value);
					this.SendPropertyChanging();
					this._occupation = value;
					this.SendPropertyChanged("occupation");
					this.OnoccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_branch", DbType="VarChar(120)")]
		public string branch
		{
			get
			{
				return this._branch;
			}
			set
			{
				if ((this._branch != value))
				{
					this.OnbranchChanging(value);
					this.SendPropertyChanging();
					this._branch = value;
					this.SendPropertyChanged("branch");
					this.OnbranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fieldofficer", DbType="VarChar(120)")]
		public string fieldofficer
		{
			get
			{
				return this._fieldofficer;
			}
			set
			{
				if ((this._fieldofficer != value))
				{
					this.OnfieldofficerChanging(value);
					this.SendPropertyChanging();
					this._fieldofficer = value;
					this.SendPropertyChanged("fieldofficer");
					this.OnfieldofficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerid", DbType="VarChar(120)")]
		public string customerid
		{
			get
			{
				return this._customerid;
			}
			set
			{
				if ((this._customerid != value))
				{
					this.OncustomeridChanging(value);
					this.SendPropertyChanging();
					this._customerid = value;
					this.SendPropertyChanged("customerid");
					this.OncustomeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(120)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nationality", DbType="VarChar(120)")]
		public string nationality
		{
			get
			{
				return this._nationality;
			}
			set
			{
				if ((this._nationality != value))
				{
					this.OnnationalityChanging(value);
					this.SendPropertyChanging();
					this._nationality = value;
					this.SendPropertyChanged("nationality");
					this.OnnationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(120)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selfemploy", DbType="VarChar(120)")]
		public string selfemploy
		{
			get
			{
				return this._selfemploy;
			}
			set
			{
				if ((this._selfemploy != value))
				{
					this.OnselfemployChanging(value);
					this.SendPropertyChanging();
					this._selfemploy = value;
					this.SendPropertyChanged("selfemploy");
					this.OnselfemployChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateofbirth", DbType="VarChar(120)")]
		public string dateofbirth
		{
			get
			{
				return this._dateofbirth;
			}
			set
			{
				if ((this._dateofbirth != value))
				{
					this.OndateofbirthChanging(value);
					this.SendPropertyChanging();
					this._dateofbirth = value;
					this.SendPropertyChanged("dateofbirth");
					this.OndateofbirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customername", DbType="VarChar(120)")]
		public string customername
		{
			get
			{
				return this._customername;
			}
			set
			{
				if ((this._customername != value))
				{
					this.OncustomernameChanging(value);
					this.SendPropertyChanging();
					this._customername = value;
					this.SendPropertyChanged("customername");
					this.OncustomernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(120)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(120)")]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(120)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(120)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountno", DbType="VarChar(120)")]
		public string accountno
		{
			get
			{
				return this._accountno;
			}
			set
			{
				if ((this._accountno != value))
				{
					this.OnaccountnoChanging(value);
					this.SendPropertyChanging();
					this._accountno = value;
					this.SendPropertyChanged("accountno");
					this.OnaccountnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_propic", DbType="VarChar(150)")]
		public string propic
		{
			get
			{
				return this._propic;
			}
			set
			{
				if ((this._propic != value))
				{
					this.OnpropicChanging(value);
					this.SendPropertyChanging();
					this._propic = value;
					this.SendPropertyChanged("propic");
					this.OnpropicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsId", DbType="Int")]
		public System.Nullable<int> SmsId
		{
			get
			{
				return this._SmsId;
			}
			set
			{
				if ((this._SmsId != value))
				{
					this.OnSmsIdChanging(value);
					this.SendPropertyChanging();
					this._SmsId = value;
					this.SendPropertyChanged("SmsId");
					this.OnSmsIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Default]")]
	public partial class Default : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Date;
		
		private string _Officer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnOfficerChanging(string value);
    partial void OnOfficerChanged();
    #endregion
		
		public Default()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(150)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Officer", DbType="VarChar(150)")]
		public string Officer
		{
			get
			{
				return this._Officer;
			}
			set
			{
				if ((this._Officer != value))
				{
					this.OnOfficerChanging(value);
					this.SendPropertyChanging();
					this._Officer = value;
					this.SendPropertyChanged("Officer");
					this.OnOfficerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.block")]
	public partial class block : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _date;
		
		private System.Nullable<int> _No;
		
		private string _staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OnNoChanging(System.Nullable<int> value);
    partial void OnNoChanged();
    partial void OnstaffChanging(string value);
    partial void OnstaffChanged();
    #endregion
		
		public block()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(50)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int")]
		public System.Nullable<int> No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff", DbType="VarChar(50)")]
		public string staff
		{
			get
			{
				return this._staff;
			}
			set
			{
				if ((this._staff != value))
				{
					this.OnstaffChanging(value);
					this.SendPropertyChanging();
					this._staff = value;
					this.SendPropertyChanged("staff");
					this.OnstaffChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _StaffName;
		
		private string _Department;
		
		private string _Propic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    #endregion
		
		public File()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(150)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(150)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(150)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mgtfee")]
	public partial class mgtfee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mgt;
		
		private string _Date;
		
		private System.Nullable<int> _Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmgtChanging(string value);
    partial void OnmgtChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    #endregion
		
		public mgtfee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mgt", DbType="VarChar(150)")]
		public string mgt
		{
			get
			{
				return this._mgt;
			}
			set
			{
				if ((this._mgt != value))
				{
					this.OnmgtChanging(value);
					this.SendPropertyChanging();
					this._mgt = value;
					this.SendPropertyChanged("mgt");
					this.OnmgtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(150)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Signature")]
	public partial class Signature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AccountNo;
		
		private string _Propic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    #endregion
		
		public Signature()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(150)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfer")]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Trans;
		
		private string _Date;
		
		private System.Nullable<int> _Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTransChanging(string value);
    partial void OnTransChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    #endregion
		
		public Transfer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trans", DbType="VarChar(50)")]
		public string Trans
		{
			get
			{
				return this._Trans;
			}
			set
			{
				if ((this._Trans != value))
				{
					this.OnTransChanging(value);
					this.SendPropertyChanging();
					this._Trans = value;
					this.SendPropertyChanged("Trans");
					this.OnTransChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminUser")]
	public partial class AdminUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    #endregion
		
		public AdminUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminTable")]
	public partial class AdminTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private string _PassWord;
		
		private System.Nullable<int> _Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    #endregion
		
		public AdminTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(120)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(120)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminTable1")]
	public partial class AdminTable1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private string _PassWord;
		
		private System.Nullable<int> _Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    #endregion
		
		public AdminTable1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(120)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="VarChar(120)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chat1")]
	public partial class Chat1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _StaffName;
		
		private string _Message;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public Chat1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(120)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(320)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chat")]
	public partial class Chat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _StaffName;
		
		private string _Message;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public Chat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(120)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(320)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeeklySME1")]
	public partial class WeeklySME1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _SMSUpdate;
		
		private System.Nullable<int> _SMSId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSMSUpdateChanging(string value);
    partial void OnSMSUpdateChanged();
    partial void OnSMSIdChanging(System.Nullable<int> value);
    partial void OnSMSIdChanged();
    #endregion
		
		public WeeklySME1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSUpdate", DbType="VarChar(150)")]
		public string SMSUpdate
		{
			get
			{
				return this._SMSUpdate;
			}
			set
			{
				if ((this._SMSUpdate != value))
				{
					this.OnSMSUpdateChanging(value);
					this.SendPropertyChanging();
					this._SMSUpdate = value;
					this.SendPropertyChanged("SMSUpdate");
					this.OnSMSUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSId", DbType="Int")]
		public System.Nullable<int> SMSId
		{
			get
			{
				return this._SMSId;
			}
			set
			{
				if ((this._SMSId != value))
				{
					this.OnSMSIdChanging(value);
					this.SendPropertyChanging();
					this._SMSId = value;
					this.SendPropertyChanged("SMSId");
					this.OnSMSIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AcctFixed")]
	public partial class AcctFixed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FieldOfficer;
		
		private string _CashInHand1;
		
		private string _Date1;
		
		private string _AccountNo;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnCashInHand1Changing(string value);
    partial void OnCashInHand1Changed();
    partial void OnDate1Changing(string value);
    partial void OnDate1Changed();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public AcctFixed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(120)")]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashInHand1", DbType="VarChar(120)")]
		public string CashInHand1
		{
			get
			{
				return this._CashInHand1;
			}
			set
			{
				if ((this._CashInHand1 != value))
				{
					this.OnCashInHand1Changing(value);
					this.SendPropertyChanging();
					this._CashInHand1 = value;
					this.SendPropertyChanged("CashInHand1");
					this.OnCashInHand1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date1", DbType="VarChar(120)")]
		public string Date1
		{
			get
			{
				return this._Date1;
			}
			set
			{
				if ((this._Date1 != value))
				{
					this.OnDate1Changing(value);
					this.SendPropertyChanging();
					this._Date1 = value;
					this.SendPropertyChanged("Date1");
					this.OnDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FieldOfficer")]
	public partial class FieldOfficer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Branch;
		
		private string _FieldOfficer1;
		
		private string _Date;
		
		private System.Nullable<long> _CashInChat;
		
		private System.Nullable<long> _CashInHand;
		
		private System.Nullable<long> _Balance;
		
		private string _AllOf;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficer1Changing(string value);
    partial void OnFieldOfficer1Changed();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCashInChatChanging(System.Nullable<long> value);
    partial void OnCashInChatChanged();
    partial void OnCashInHandChanging(System.Nullable<long> value);
    partial void OnCashInHandChanged();
    partial void OnBalanceChanging(System.Nullable<long> value);
    partial void OnBalanceChanged();
    partial void OnAllOfChanging(string value);
    partial void OnAllOfChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public FieldOfficer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="FieldOfficer", Storage="_FieldOfficer1", DbType="VarChar(200)")]
		public string FieldOfficer1
		{
			get
			{
				return this._FieldOfficer1;
			}
			set
			{
				if ((this._FieldOfficer1 != value))
				{
					this.OnFieldOfficer1Changing(value);
					this.SendPropertyChanging();
					this._FieldOfficer1 = value;
					this.SendPropertyChanged("FieldOfficer1");
					this.OnFieldOfficer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashInChat", DbType="BigInt")]
		public System.Nullable<long> CashInChat
		{
			get
			{
				return this._CashInChat;
			}
			set
			{
				if ((this._CashInChat != value))
				{
					this.OnCashInChatChanging(value);
					this.SendPropertyChanging();
					this._CashInChat = value;
					this.SendPropertyChanged("CashInChat");
					this.OnCashInChatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashInHand", DbType="BigInt")]
		public System.Nullable<long> CashInHand
		{
			get
			{
				return this._CashInHand;
			}
			set
			{
				if ((this._CashInHand != value))
				{
					this.OnCashInHandChanging(value);
					this.SendPropertyChanging();
					this._CashInHand = value;
					this.SendPropertyChanged("CashInHand");
					this.OnCashInHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="BigInt")]
		public System.Nullable<long> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllOf", DbType="VarChar(200)")]
		public string AllOf
		{
			get
			{
				return this._AllOf;
			}
			set
			{
				if ((this._AllOf != value))
				{
					this.OnAllOfChanging(value);
					this.SendPropertyChanging();
					this._AllOf = value;
					this.SendPropertyChanged("AllOf");
					this.OnAllOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FieldOfficerAmount")]
	public partial class FieldOfficerAmount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Branch;
		
		private string _FieldOfficer;
		
		private string _Date;
		
		private System.Nullable<long> _CashInChat;
		
		private System.Nullable<long> _CashInHand;
		
		private System.Nullable<long> _Balance;
		
		private string _AllOf;
		
		private string _Approved;
		
		private string _ApproveDate;
		
		private string _ApprovedBy;
		
		private string _AccountNo;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnCashInChatChanging(System.Nullable<long> value);
    partial void OnCashInChatChanged();
    partial void OnCashInHandChanging(System.Nullable<long> value);
    partial void OnCashInHandChanged();
    partial void OnBalanceChanging(System.Nullable<long> value);
    partial void OnBalanceChanged();
    partial void OnAllOfChanging(string value);
    partial void OnAllOfChanged();
    partial void OnApprovedChanging(string value);
    partial void OnApprovedChanged();
    partial void OnApproveDateChanging(string value);
    partial void OnApproveDateChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public FieldOfficerAmount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(200)")]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashInChat", DbType="BigInt")]
		public System.Nullable<long> CashInChat
		{
			get
			{
				return this._CashInChat;
			}
			set
			{
				if ((this._CashInChat != value))
				{
					this.OnCashInChatChanging(value);
					this.SendPropertyChanging();
					this._CashInChat = value;
					this.SendPropertyChanged("CashInChat");
					this.OnCashInChatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashInHand", DbType="BigInt")]
		public System.Nullable<long> CashInHand
		{
			get
			{
				return this._CashInHand;
			}
			set
			{
				if ((this._CashInHand != value))
				{
					this.OnCashInHandChanging(value);
					this.SendPropertyChanging();
					this._CashInHand = value;
					this.SendPropertyChanged("CashInHand");
					this.OnCashInHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="BigInt")]
		public System.Nullable<long> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllOf", DbType="VarChar(200)")]
		public string AllOf
		{
			get
			{
				return this._AllOf;
			}
			set
			{
				if ((this._AllOf != value))
				{
					this.OnAllOfChanging(value);
					this.SendPropertyChanging();
					this._AllOf = value;
					this.SendPropertyChanged("AllOf");
					this.OnAllOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="VarChar(200)")]
		public string Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveDate", DbType="VarChar(200)")]
		public string ApproveDate
		{
			get
			{
				return this._ApproveDate;
			}
			set
			{
				if ((this._ApproveDate != value))
				{
					this.OnApproveDateChanging(value);
					this.SendPropertyChanging();
					this._ApproveDate = value;
					this.SendPropertyChanged("ApproveDate");
					this.OnApproveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(200)")]
		public string ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(200)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Def")]
	public partial class Def : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Date;
		
		private string _Officer;
		
		private string _Month;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnOfficerChanging(string value);
    partial void OnOfficerChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    #endregion
		
		public Def()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(120)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Officer", DbType="VarChar(120)")]
		public string Officer
		{
			get
			{
				return this._Officer;
			}
			set
			{
				if ((this._Officer != value))
				{
					this.OnOfficerChanging(value);
					this.SendPropertyChanging();
					this._Officer = value;
					this.SendPropertyChanged("Officer");
					this.OnOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(150)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guarantory")]
	public partial class Guarantory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Occupation;
		
		private string _Sector;
		
		private string _Position;
		
		private string _Level;
		
		private string _EmploymentType;
		
		private string _MaritalStatus;
		
		private string _ResidentialAddress;
		
		private string _EmploymentName;
		
		private string _OfficeAddress;
		
		private string _RelationshipToApplicant;
		
		private string _TelephoneNo;
		
		private string _OfficialEmail;
		
		private string _Propic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnSectorChanging(string value);
    partial void OnSectorChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnEmploymentTypeChanging(string value);
    partial void OnEmploymentTypeChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnResidentialAddressChanging(string value);
    partial void OnResidentialAddressChanged();
    partial void OnEmploymentNameChanging(string value);
    partial void OnEmploymentNameChanged();
    partial void OnOfficeAddressChanging(string value);
    partial void OnOfficeAddressChanged();
    partial void OnRelationshipToApplicantChanging(string value);
    partial void OnRelationshipToApplicantChanged();
    partial void OnTelephoneNoChanging(string value);
    partial void OnTelephoneNoChanged();
    partial void OnOfficialEmailChanging(string value);
    partial void OnOfficialEmailChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    #endregion
		
		public Guarantory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(120)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(120)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(120)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sector", DbType="VarChar(120)")]
		public string Sector
		{
			get
			{
				return this._Sector;
			}
			set
			{
				if ((this._Sector != value))
				{
					this.OnSectorChanging(value);
					this.SendPropertyChanging();
					this._Sector = value;
					this.SendPropertyChanged("Sector");
					this.OnSectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(120)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(120)")]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentType", DbType="VarChar(120)")]
		public string EmploymentType
		{
			get
			{
				return this._EmploymentType;
			}
			set
			{
				if ((this._EmploymentType != value))
				{
					this.OnEmploymentTypeChanging(value);
					this.SendPropertyChanging();
					this._EmploymentType = value;
					this.SendPropertyChanged("EmploymentType");
					this.OnEmploymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="VarChar(120)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialAddress", DbType="VarChar(120)")]
		public string ResidentialAddress
		{
			get
			{
				return this._ResidentialAddress;
			}
			set
			{
				if ((this._ResidentialAddress != value))
				{
					this.OnResidentialAddressChanging(value);
					this.SendPropertyChanging();
					this._ResidentialAddress = value;
					this.SendPropertyChanged("ResidentialAddress");
					this.OnResidentialAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploymentName", DbType="VarChar(120)")]
		public string EmploymentName
		{
			get
			{
				return this._EmploymentName;
			}
			set
			{
				if ((this._EmploymentName != value))
				{
					this.OnEmploymentNameChanging(value);
					this.SendPropertyChanging();
					this._EmploymentName = value;
					this.SendPropertyChanged("EmploymentName");
					this.OnEmploymentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeAddress", DbType="VarChar(120)")]
		public string OfficeAddress
		{
			get
			{
				return this._OfficeAddress;
			}
			set
			{
				if ((this._OfficeAddress != value))
				{
					this.OnOfficeAddressChanging(value);
					this.SendPropertyChanging();
					this._OfficeAddress = value;
					this.SendPropertyChanged("OfficeAddress");
					this.OnOfficeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipToApplicant", DbType="VarChar(120)")]
		public string RelationshipToApplicant
		{
			get
			{
				return this._RelationshipToApplicant;
			}
			set
			{
				if ((this._RelationshipToApplicant != value))
				{
					this.OnRelationshipToApplicantChanging(value);
					this.SendPropertyChanging();
					this._RelationshipToApplicant = value;
					this.SendPropertyChanged("RelationshipToApplicant");
					this.OnRelationshipToApplicantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNo", DbType="VarChar(120)")]
		public string TelephoneNo
		{
			get
			{
				return this._TelephoneNo;
			}
			set
			{
				if ((this._TelephoneNo != value))
				{
					this.OnTelephoneNoChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNo = value;
					this.SendPropertyChanged("TelephoneNo");
					this.OnTelephoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficialEmail", DbType="VarChar(120)")]
		public string OfficialEmail
		{
			get
			{
				return this._OfficialEmail;
			}
			set
			{
				if ((this._OfficialEmail != value))
				{
					this.OnOfficialEmailChanging(value);
					this.SendPropertyChanging();
					this._OfficialEmail = value;
					this.SendPropertyChanged("OfficialEmail");
					this.OnOfficialEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(120)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTable")]
	public partial class UserTable1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    #endregion
		
		public UserTable1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanPayment")]
	public partial class LoanPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _MaturityDate;
		
		private string _Officer;
		
		private string _Amount;
		
		private string _Payment;
		
		private string _AccountNo;
		
		private string _AccBalance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnMaturityDateChanging(string value);
    partial void OnMaturityDateChanged();
    partial void OnOfficerChanging(string value);
    partial void OnOfficerChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnPaymentChanging(string value);
    partial void OnPaymentChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAccBalanceChanging(string value);
    partial void OnAccBalanceChanged();
    #endregion
		
		public LoanPayment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(120)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="VarChar(120)")]
		public string MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Officer", DbType="VarChar(120)")]
		public string Officer
		{
			get
			{
				return this._Officer;
			}
			set
			{
				if ((this._Officer != value))
				{
					this.OnOfficerChanging(value);
					this.SendPropertyChanging();
					this._Officer = value;
					this.SendPropertyChanged("Officer");
					this.OnOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(120)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="VarChar(120)")]
		public string Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccBalance", DbType="VarChar(150)")]
		public string AccBalance
		{
			get
			{
				return this._AccBalance;
			}
			set
			{
				if ((this._AccBalance != value))
				{
					this.OnAccBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccBalance = value;
					this.SendPropertyChanged("AccBalance");
					this.OnAccBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffGuarantor")]
	public partial class StaffGuarantor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FullName;
		
		private string _Title;
		
		private string _Occupation;
		
		private string _Relationship;
		
		private string _HomeAddress;
		
		private string _PhoneNo;
		
		private string _StaffName;
		
		private string _MaritalStatus;
		
		private string _Propic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnRelationshipChanging(string value);
    partial void OnRelationshipChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    #endregion
		
		public StaffGuarantor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(120)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(120)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(120)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relationship", DbType="VarChar(120)")]
		public string Relationship
		{
			get
			{
				return this._Relationship;
			}
			set
			{
				if ((this._Relationship != value))
				{
					this.OnRelationshipChanging(value);
					this.SendPropertyChanging();
					this._Relationship = value;
					this.SendPropertyChanged("Relationship");
					this.OnRelationshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="VarChar(120)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(120)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(120)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="VarChar(120)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(120)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HResourcesUser")]
	public partial class HResourcesUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public HResourcesUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanUser")]
	public partial class LoanUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public LoanUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepositeUser1")]
	public partial class DepositeUser1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public DepositeUser1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TMTFieldOfficeChatUser")]
	public partial class TMTFieldOfficeChatUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public TMTFieldOfficeChatUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WithdrawUser")]
	public partial class WithdrawUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public WithdrawUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TMTDateControlLoginUser")]
	public partial class TMTDateControlLoginUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public TMTDateControlLoginUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DepositeUser")]
	public partial class DepositeUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public DepositeUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerCareUser")]
	public partial class CustomerCareUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public CustomerCareUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TMTCheckRecordUser")]
	public partial class TMTCheckRecordUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public TMTCheckRecordUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountingUser")]
	public partial class AccountingUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Active;
		
		private string _Everyone;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnEveryoneChanging(string value);
    partial void OnEveryoneChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public AccountingUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="VarChar(120)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Everyone", DbType="VarChar(120)")]
		public string Everyone
		{
			get
			{
				return this._Everyone;
			}
			set
			{
				if ((this._Everyone != value))
				{
					this.OnEveryoneChanging(value);
					this.SendPropertyChanging();
					this._Everyone = value;
					this.SendPropertyChanged("Everyone");
					this.OnEveryoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tmt")]
	public partial class Tmt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Option1;
		
		private string _Date;
		
		private System.Nullable<int> _AllV;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAllVChanging(System.Nullable<int> value);
    partial void OnAllVChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public Tmt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="VarChar(120)")]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllV", DbType="Int")]
		public System.Nullable<int> AllV
		{
			get
			{
				return this._AllV;
			}
			set
			{
				if ((this._AllV != value))
				{
					this.OnAllVChanging(value);
					this.SendPropertyChanging();
					this._AllV = value;
					this.SendPropertyChanged("AllV");
					this.OnAllVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tmt1")]
	public partial class Tmt1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Option1;
		
		private string _Date;
		
		private System.Nullable<int> _AllV;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAllVChanging(System.Nullable<int> value);
    partial void OnAllVChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public Tmt1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="VarChar(120)")]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllV", DbType="Int")]
		public System.Nullable<int> AllV
		{
			get
			{
				return this._AllV;
			}
			set
			{
				if ((this._AllV != value))
				{
					this.OnAllVChanging(value);
					this.SendPropertyChanging();
					this._AllV = value;
					this.SendPropertyChanged("AllV");
					this.OnAllVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tmt2")]
	public partial class Tmt2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Option1;
		
		private string _Date;
		
		private System.Nullable<int> _AllV;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAllVChanging(System.Nullable<int> value);
    partial void OnAllVChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public Tmt2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="VarChar(120)")]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllV", DbType="Int")]
		public System.Nullable<int> AllV
		{
			get
			{
				return this._AllV;
			}
			set
			{
				if ((this._AllV != value))
				{
					this.OnAllVChanging(value);
					this.SendPropertyChanging();
					this._AllV = value;
					this.SendPropertyChanged("AllV");
					this.OnAllVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tmt3")]
	public partial class Tmt3 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Option1;
		
		private string _Date;
		
		private System.Nullable<int> _AllV;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAllVChanging(System.Nullable<int> value);
    partial void OnAllVChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public Tmt3()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="VarChar(120)")]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllV", DbType="Int")]
		public System.Nullable<int> AllV
		{
			get
			{
				return this._AllV;
			}
			set
			{
				if ((this._AllV != value))
				{
					this.OnAllVChanging(value);
					this.SendPropertyChanging();
					this._AllV = value;
					this.SendPropertyChanged("AllV");
					this.OnAllVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tmt4")]
	public partial class Tmt4 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Option1;
		
		private string _Date;
		
		private System.Nullable<int> _AllV;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOption1Changing(string value);
    partial void OnOption1Changed();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAllVChanging(System.Nullable<int> value);
    partial void OnAllVChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public Tmt4()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Option1", DbType="VarChar(120)")]
		public string Option1
		{
			get
			{
				return this._Option1;
			}
			set
			{
				if ((this._Option1 != value))
				{
					this.OnOption1Changing(value);
					this.SendPropertyChanging();
					this._Option1 = value;
					this.SendPropertyChanged("Option1");
					this.OnOption1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllV", DbType="Int")]
		public System.Nullable<int> AllV
		{
			get
			{
				return this._AllV;
			}
			set
			{
				if ((this._AllV != value))
				{
					this.OnAllVChanging(value);
					this.SendPropertyChanging();
					this._AllV = value;
					this.SendPropertyChanged("AllV");
					this.OnAllVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Leave")]
	public partial class Leave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _StaffName;
		
		private string _LeaveDate;
		
		private string _LeaveRange;
		
		private string _LeaveReason;
		
		private string _LeaveResume;
		
		private string _LeaveMonth;
		
		private string _ActiveStatus;
		
		private string _NoOfLeave;
		
		private string _Year;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnLeaveDateChanging(string value);
    partial void OnLeaveDateChanged();
    partial void OnLeaveRangeChanging(string value);
    partial void OnLeaveRangeChanged();
    partial void OnLeaveReasonChanging(string value);
    partial void OnLeaveReasonChanged();
    partial void OnLeaveResumeChanging(string value);
    partial void OnLeaveResumeChanged();
    partial void OnLeaveMonthChanging(string value);
    partial void OnLeaveMonthChanged();
    partial void OnActiveStatusChanging(string value);
    partial void OnActiveStatusChanged();
    partial void OnNoOfLeaveChanging(string value);
    partial void OnNoOfLeaveChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public Leave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(200)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveRange", DbType="VarChar(200)")]
		public string LeaveRange
		{
			get
			{
				return this._LeaveRange;
			}
			set
			{
				if ((this._LeaveRange != value))
				{
					this.OnLeaveRangeChanging(value);
					this.SendPropertyChanging();
					this._LeaveRange = value;
					this.SendPropertyChanged("LeaveRange");
					this.OnLeaveRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveReason", DbType="VarChar(200)")]
		public string LeaveReason
		{
			get
			{
				return this._LeaveReason;
			}
			set
			{
				if ((this._LeaveReason != value))
				{
					this.OnLeaveReasonChanging(value);
					this.SendPropertyChanging();
					this._LeaveReason = value;
					this.SendPropertyChanged("LeaveReason");
					this.OnLeaveReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveResume", DbType="VarChar(200)")]
		public string LeaveResume
		{
			get
			{
				return this._LeaveResume;
			}
			set
			{
				if ((this._LeaveResume != value))
				{
					this.OnLeaveResumeChanging(value);
					this.SendPropertyChanging();
					this._LeaveResume = value;
					this.SendPropertyChanged("LeaveResume");
					this.OnLeaveResumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveMonth", DbType="VarChar(200)")]
		public string LeaveMonth
		{
			get
			{
				return this._LeaveMonth;
			}
			set
			{
				if ((this._LeaveMonth != value))
				{
					this.OnLeaveMonthChanging(value);
					this.SendPropertyChanging();
					this._LeaveMonth = value;
					this.SendPropertyChanged("LeaveMonth");
					this.OnLeaveMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveStatus", DbType="VarChar(200)")]
		public string ActiveStatus
		{
			get
			{
				return this._ActiveStatus;
			}
			set
			{
				if ((this._ActiveStatus != value))
				{
					this.OnActiveStatusChanging(value);
					this.SendPropertyChanging();
					this._ActiveStatus = value;
					this.SendPropertyChanged("ActiveStatus");
					this.OnActiveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfLeave", DbType="VarChar(50)")]
		public string NoOfLeave
		{
			get
			{
				return this._NoOfLeave;
			}
			set
			{
				if ((this._NoOfLeave != value))
				{
					this.OnNoOfLeaveChanging(value);
					this.SendPropertyChanging();
					this._NoOfLeave = value;
					this.SendPropertyChanged("NoOfLeave");
					this.OnNoOfLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(50)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSAlertProfit")]
	public partial class SMSAlertProfit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Month;
		
		private string _AccountNo;
		
		private string _Profit;
		
		private string _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnProfitChanging(string value);
    partial void OnProfitChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    #endregion
		
		public SMSAlertProfit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(120)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="VarChar(120)")]
		public string Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InitailDeposite")]
	public partial class InitailDeposite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Month;
		
		private string _AccountNo;
		
		private string _Profit;
		
		private string _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnProfitChanging(string value);
    partial void OnProfitChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    #endregion
		
		public InitailDeposite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(120)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="VarChar(120)")]
		public string Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewCustomerSMS")]
	public partial class NewCustomerSM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Month;
		
		private string _AccountNo;
		
		private string _Profit;
		
		private string _Year;
		
		private string _PageNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnProfitChanging(string value);
    partial void OnProfitChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnPageNoChanging(string value);
    partial void OnPageNoChanged();
    #endregion
		
		public NewCustomerSM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(120)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="VarChar(120)")]
		public string Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNo", DbType="VarChar(50)")]
		public string PageNo
		{
			get
			{
				return this._PageNo;
			}
			set
			{
				if ((this._PageNo != value))
				{
					this.OnPageNoChanging(value);
					this.SendPropertyChanging();
					this._PageNo = value;
					this.SendPropertyChanged("PageNo");
					this.OnPageNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UploadPic")]
	public partial class UploadPic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AccountNo;
		
		private string _Propic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    #endregion
		
		public UploadPic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(120)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.greaterValue")]
	public partial class greaterValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FieldOfficer;
		
		private string _CashInHand;
		
		private string _Date;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnCashInHandChanging(string value);
    partial void OnCashInHandChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public greaterValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(120)")]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashInHand", DbType="VarChar(120)")]
		public string CashInHand
		{
			get
			{
				return this._CashInHand;
			}
			set
			{
				if ((this._CashInHand != value))
				{
					this.OnCashInHandChanging(value);
					this.SendPropertyChanging();
					this._CashInHand = value;
					this.SendPropertyChanged("CashInHand");
					this.OnCashInHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(200)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanAlert")]
	public partial class LoanAlert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AccountNo;
		
		private string _MaturityDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnMaturityDateChanging(string value);
    partial void OnMaturityDateChanged();
    #endregion
		
		public LoanAlert()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(150)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="VarChar(50)")]
		public string MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactProfit")]
	public partial class TransactProfit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MonthProfit;
		
		private string _Date;
		
		private string _Year;
		
		private string _Month;
		
		private string _AccountNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthProfitChanging(string value);
    partial void OnMonthProfitChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    #endregion
		
		public TransactProfit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthProfit", DbType="VarChar(120)")]
		public string MonthProfit
		{
			get
			{
				return this._MonthProfit;
			}
			set
			{
				if ((this._MonthProfit != value))
				{
					this.OnMonthProfitChanging(value);
					this.SendPropertyChanging();
					this._MonthProfit = value;
					this.SendPropertyChanged("MonthProfit");
					this.OnMonthProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(50)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(50)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Complain")]
	public partial class Complain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Complain1;
		
		private string _StaffName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnComplain1Changing(string value);
    partial void OnComplain1Changed();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    #endregion
		
		public Complain()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Complain", Storage="_Complain1", DbType="VarChar(1220)")]
		public string Complain1
		{
			get
			{
				return this._Complain1;
			}
			set
			{
				if ((this._Complain1 != value))
				{
					this.OnComplain1Changing(value);
					this.SendPropertyChanging();
					this._Complain1 = value;
					this.SendPropertyChanged("Complain1");
					this.OnComplain1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(120)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffPost")]
	public partial class StaffPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PostedBy;
		
		private string _Date;
		
		private string _FieldOfficer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    #endregion
		
		public StaffPost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(120)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(50)")]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeeklySMS1")]
	public partial class WeeklySMS1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _customerid;
		
		private string _msg;
		
		private string _accountno;
		
		private string _phoneno;
		
		private System.Nullable<double> _depositebalance;
		
		private string _date;
		
		private System.Nullable<double> _depositecollect;
		
		private string _smCharge;
		
		private string _month;
		
		private string _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomeridChanging(string value);
    partial void OncustomeridChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnaccountnoChanging(string value);
    partial void OnaccountnoChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OndepositebalanceChanging(System.Nullable<double> value);
    partial void OndepositebalanceChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OndepositecollectChanging(System.Nullable<double> value);
    partial void OndepositecollectChanged();
    partial void OnsmChargeChanging(string value);
    partial void OnsmChargeChanged();
    partial void OnmonthChanging(string value);
    partial void OnmonthChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    #endregion
		
		public WeeklySMS1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerid", DbType="VarChar(200)")]
		public string customerid
		{
			get
			{
				return this._customerid;
			}
			set
			{
				if ((this._customerid != value))
				{
					this.OncustomeridChanging(value);
					this.SendPropertyChanging();
					this._customerid = value;
					this.SendPropertyChanged("customerid");
					this.OncustomeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg", DbType="VarChar(200)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountno", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string accountno
		{
			get
			{
				return this._accountno;
			}
			set
			{
				if ((this._accountno != value))
				{
					this.OnaccountnoChanging(value);
					this.SendPropertyChanging();
					this._accountno = value;
					this.SendPropertyChanged("accountno");
					this.OnaccountnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(200)")]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositebalance", DbType="Float")]
		public System.Nullable<double> depositebalance
		{
			get
			{
				return this._depositebalance;
			}
			set
			{
				if ((this._depositebalance != value))
				{
					this.OndepositebalanceChanging(value);
					this.SendPropertyChanging();
					this._depositebalance = value;
					this.SendPropertyChanged("depositebalance");
					this.OndepositebalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(200)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositecollect", DbType="Float")]
		public System.Nullable<double> depositecollect
		{
			get
			{
				return this._depositecollect;
			}
			set
			{
				if ((this._depositecollect != value))
				{
					this.OndepositecollectChanging(value);
					this.SendPropertyChanging();
					this._depositecollect = value;
					this.SendPropertyChanged("depositecollect");
					this.OndepositecollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smCharge", DbType="VarChar(200)")]
		public string smCharge
		{
			get
			{
				return this._smCharge;
			}
			set
			{
				if ((this._smCharge != value))
				{
					this.OnsmChargeChanging(value);
					this.SendPropertyChanging();
					this._smCharge = value;
					this.SendPropertyChanged("smCharge");
					this.OnsmChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="VarChar(50)")]
		public string month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YearlyAnalysis")]
	public partial class YearlyAnalysi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Amount;
		
		private string _Year;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public YearlyAnalysi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(150)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(150)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(150)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountTill")]
	public partial class AccountTill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _PostedBy;
		
		private string _Date;
		
		private string _MonthYear;
		
		private string _RecievedBy;
		
		private string _AmountRelease;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    partial void OnRecievedByChanging(string value);
    partial void OnRecievedByChanged();
    partial void OnAmountReleaseChanging(string value);
    partial void OnAmountReleaseChanged();
    #endregion
		
		public AccountTill()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(200)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(200)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedBy", DbType="VarChar(200)")]
		public string RecievedBy
		{
			get
			{
				return this._RecievedBy;
			}
			set
			{
				if ((this._RecievedBy != value))
				{
					this.OnRecievedByChanging(value);
					this.SendPropertyChanging();
					this._RecievedBy = value;
					this.SendPropertyChanged("RecievedBy");
					this.OnRecievedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountRelease", DbType="VarChar(200)")]
		public string AmountRelease
		{
			get
			{
				return this._AmountRelease;
			}
			set
			{
				if ((this._AmountRelease != value))
				{
					this.OnAmountReleaseChanging(value);
					this.SendPropertyChanging();
					this._AmountRelease = value;
					this.SendPropertyChanged("AmountRelease");
					this.OnAmountReleaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TellerTill")]
	public partial class TellerTill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AccountNo;
		
		private string _SlipNo;
		
		private string _Date;
		
		private string _Amount;
		
		private string _PostedBy;
		
		private string _Approved;
		
		private string _ApprovedDate;
		
		private string _ApprovedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnSlipNoChanging(string value);
    partial void OnSlipNoChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnApprovedChanging(string value);
    partial void OnApprovedChanged();
    partial void OnApprovedDateChanging(string value);
    partial void OnApprovedDateChanged();
    partial void OnApprovedByChanging(string value);
    partial void OnApprovedByChanged();
    #endregion
		
		public TellerTill()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(200)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlipNo", DbType="VarChar(200)")]
		public string SlipNo
		{
			get
			{
				return this._SlipNo;
			}
			set
			{
				if ((this._SlipNo != value))
				{
					this.OnSlipNoChanging(value);
					this.SendPropertyChanging();
					this._SlipNo = value;
					this.SendPropertyChanged("SlipNo");
					this.OnSlipNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(200)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(200)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="VarChar(200)")]
		public string Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="VarChar(200)")]
		public string ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="VarChar(200)")]
		public string ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanElapse")]
	public partial class LoanElapse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AccountNo;
		
		private string _Amount;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public LoanElapse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(120)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddBranch")]
	public partial class AddBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Branch;
		
		private string _Admin;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnAdminChanging(string value);
    partial void OnAdminChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public AddBranch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(120)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="VarChar(120)")]
		public string Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountType")]
	public partial class AccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AcctType;
		
		private string _Admin;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAcctTypeChanging(string value);
    partial void OnAcctTypeChanged();
    partial void OnAdminChanging(string value);
    partial void OnAdminChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public AccountType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctType", DbType="VarChar(120)")]
		public string AcctType
		{
			get
			{
				return this._AcctType;
			}
			set
			{
				if ((this._AcctType != value))
				{
					this.OnAcctTypeChanging(value);
					this.SendPropertyChanging();
					this._AcctType = value;
					this.SendPropertyChanged("AcctType");
					this.OnAcctTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="VarChar(120)")]
		public string Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTable")]
	public partial class UserTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Username;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    #endregion
		
		public UserTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Withdraw")]
	public partial class Withdraw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CustomerId;
		
		private string _Branch;
		
		private string _FieldOfficer;
		
		private string _AccountNo;
		
		private string _PageNumber;
		
		private string _Date;
		
		private string _PhoneNo;
		
		private string _ChartNo;
		
		private string _Withdraw1;
		
		private string _PostedBy;
		
		private string _AccountBalance;
		
		private string _SMSCharges;
		
		private string _MonthYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnPageNumberChanging(string value);
    partial void OnPageNumberChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnChartNoChanging(string value);
    partial void OnChartNoChanged();
    partial void OnWithdraw1Changing(string value);
    partial void OnWithdraw1Changed();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnAccountBalanceChanging(string value);
    partial void OnAccountBalanceChanged();
    partial void OnSMSChargesChanging(string value);
    partial void OnSMSChargesChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    #endregion
		
		public Withdraw()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="VarChar(200)")]
		public string CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(200)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNumber", DbType="VarChar(200)")]
		public string PageNumber
		{
			get
			{
				return this._PageNumber;
			}
			set
			{
				if ((this._PageNumber != value))
				{
					this.OnPageNumberChanging(value);
					this.SendPropertyChanging();
					this._PageNumber = value;
					this.SendPropertyChanged("PageNumber");
					this.OnPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(200)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartNo", DbType="VarChar(200)")]
		public string ChartNo
		{
			get
			{
				return this._ChartNo;
			}
			set
			{
				if ((this._ChartNo != value))
				{
					this.OnChartNoChanging(value);
					this.SendPropertyChanging();
					this._ChartNo = value;
					this.SendPropertyChanged("ChartNo");
					this.OnChartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Withdraw", Storage="_Withdraw1", DbType="VarChar(200)")]
		public string Withdraw1
		{
			get
			{
				return this._Withdraw1;
			}
			set
			{
				if ((this._Withdraw1 != value))
				{
					this.OnWithdraw1Changing(value);
					this.SendPropertyChanging();
					this._Withdraw1 = value;
					this.SendPropertyChanged("Withdraw1");
					this.OnWithdraw1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(200)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="VarChar(200)")]
		public string AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSCharges", DbType="VarChar(200)")]
		public string SMSCharges
		{
			get
			{
				return this._SMSCharges;
			}
			set
			{
				if ((this._SMSCharges != value))
				{
					this.OnSMSChargesChanging(value);
					this.SendPropertyChanging();
					this._SMSCharges = value;
					this.SendPropertyChanged("SMSCharges");
					this.OnSMSChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(200)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Birthday")]
	public partial class Birthday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _StaffName;
		
		private string _Date1;
		
		private string _PhoneNo;
		
		private string _Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnDate1Changing(string value);
    partial void OnDate1Changed();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public Birthday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(120)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date1", DbType="VarChar(120)")]
		public string Date1
		{
			get
			{
				return this._Date1;
			}
			set
			{
				if ((this._Date1 != value))
				{
					this.OnDate1Changing(value);
					this.SendPropertyChanging();
					this._Date1 = value;
					this.SendPropertyChanged("Date1");
					this.OnDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(120)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emergency")]
	public partial class Emergency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _StaffName;
		
		private string _EmergencyNeed;
		
		private string _Date;
		
		private string _Emergency1;
		
		private string _Month;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnEmergencyNeedChanging(string value);
    partial void OnEmergencyNeedChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnEmergency1Changing(string value);
    partial void OnEmergency1Changed();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    #endregion
		
		public Emergency()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(120)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyNeed", DbType="VarChar(120)")]
		public string EmergencyNeed
		{
			get
			{
				return this._EmergencyNeed;
			}
			set
			{
				if ((this._EmergencyNeed != value))
				{
					this.OnEmergencyNeedChanging(value);
					this.SendPropertyChanging();
					this._EmergencyNeed = value;
					this.SendPropertyChanged("EmergencyNeed");
					this.OnEmergencyNeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emergency", Storage="_Emergency1", DbType="VarChar(120)")]
		public string Emergency1
		{
			get
			{
				return this._Emergency1;
			}
			set
			{
				if ((this._Emergency1 != value))
				{
					this.OnEmergency1Changing(value);
					this.SendPropertyChanging();
					this._Emergency1 = value;
					this.SendPropertyChanged("Emergency1");
					this.OnEmergency1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(120)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Branch;
		
		private string _StaffName;
		
		private string _Status;
		
		private string _Nationality;
		
		private string _Birth;
		
		private string _Home;
		
		private string _Religion;
		
		private string _Birthday;
		
		private string _Department;
		
		private string _Qualification;
		
		private string _Gender;
		
		private string _State;
		
		private string _EmailAdd;
		
		private string _PhoneNo;
		
		private string _Propic;
		
		private string _ActiveStatus;
		
		private string _Salary;
		
		private string _StaffPosition;
		
		private string _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnNationalityChanging(string value);
    partial void OnNationalityChanged();
    partial void OnBirthChanging(string value);
    partial void OnBirthChanged();
    partial void OnHomeChanging(string value);
    partial void OnHomeChanged();
    partial void OnReligionChanging(string value);
    partial void OnReligionChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnQualificationChanging(string value);
    partial void OnQualificationChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnEmailAddChanging(string value);
    partial void OnEmailAddChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    partial void OnActiveStatusChanging(string value);
    partial void OnActiveStatusChanged();
    partial void OnSalaryChanging(string value);
    partial void OnSalaryChanged();
    partial void OnStaffPositionChanging(string value);
    partial void OnStaffPositionChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    #endregion
		
		public Staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(120)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(120)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(120)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationality", DbType="VarChar(120)")]
		public string Nationality
		{
			get
			{
				return this._Nationality;
			}
			set
			{
				if ((this._Nationality != value))
				{
					this.OnNationalityChanging(value);
					this.SendPropertyChanging();
					this._Nationality = value;
					this.SendPropertyChanged("Nationality");
					this.OnNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth", DbType="VarChar(120)")]
		public string Birth
		{
			get
			{
				return this._Birth;
			}
			set
			{
				if ((this._Birth != value))
				{
					this.OnBirthChanging(value);
					this.SendPropertyChanging();
					this._Birth = value;
					this.SendPropertyChanged("Birth");
					this.OnBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home", DbType="VarChar(120)")]
		public string Home
		{
			get
			{
				return this._Home;
			}
			set
			{
				if ((this._Home != value))
				{
					this.OnHomeChanging(value);
					this.SendPropertyChanging();
					this._Home = value;
					this.SendPropertyChanged("Home");
					this.OnHomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Religion", DbType="VarChar(120)")]
		public string Religion
		{
			get
			{
				return this._Religion;
			}
			set
			{
				if ((this._Religion != value))
				{
					this.OnReligionChanging(value);
					this.SendPropertyChanging();
					this._Religion = value;
					this.SendPropertyChanged("Religion");
					this.OnReligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(120)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(120)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualification", DbType="VarChar(120)")]
		public string Qualification
		{
			get
			{
				return this._Qualification;
			}
			set
			{
				if ((this._Qualification != value))
				{
					this.OnQualificationChanging(value);
					this.SendPropertyChanging();
					this._Qualification = value;
					this.SendPropertyChanged("Qualification");
					this.OnQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(120)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(120)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAdd", DbType="VarChar(120)")]
		public string EmailAdd
		{
			get
			{
				return this._EmailAdd;
			}
			set
			{
				if ((this._EmailAdd != value))
				{
					this.OnEmailAddChanging(value);
					this.SendPropertyChanging();
					this._EmailAdd = value;
					this.SendPropertyChanged("EmailAdd");
					this.OnEmailAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(120)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(120)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveStatus", DbType="VarChar(120)")]
		public string ActiveStatus
		{
			get
			{
				return this._ActiveStatus;
			}
			set
			{
				if ((this._ActiveStatus != value))
				{
					this.OnActiveStatusChanging(value);
					this.SendPropertyChanging();
					this._ActiveStatus = value;
					this.SendPropertyChanged("ActiveStatus");
					this.OnActiveStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="VarChar(120)")]
		public string Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffPosition", DbType="VarChar(120)")]
		public string StaffPosition
		{
			get
			{
				return this._StaffPosition;
			}
			set
			{
				if ((this._StaffPosition != value))
				{
					this.OnStaffPositionChanging(value);
					this.SendPropertyChanging();
					this._StaffPosition = value;
					this.SendPropertyChanged("StaffPosition");
					this.OnStaffPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(50)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MonthlySalaryPayment;
		
		private string _StaffName;
		
		private string _Date;
		
		private string _Emergency;
		
		private string _MonthlyBenefit;
		
		private string _Allowance;
		
		private string _EmergencyNeed;
		
		private string _Branch;
		
		private string _Year;
		
		private string _Salary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthlySalaryPaymentChanging(string value);
    partial void OnMonthlySalaryPaymentChanged();
    partial void OnStaffNameChanging(string value);
    partial void OnStaffNameChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnEmergencyChanging(string value);
    partial void OnEmergencyChanged();
    partial void OnMonthlyBenefitChanging(string value);
    partial void OnMonthlyBenefitChanged();
    partial void OnAllowanceChanging(string value);
    partial void OnAllowanceChanged();
    partial void OnEmergencyNeedChanging(string value);
    partial void OnEmergencyNeedChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnSalaryChanging(string value);
    partial void OnSalaryChanged();
    #endregion
		
		public Payment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlySalaryPayment", DbType="VarChar(200)")]
		public string MonthlySalaryPayment
		{
			get
			{
				return this._MonthlySalaryPayment;
			}
			set
			{
				if ((this._MonthlySalaryPayment != value))
				{
					this.OnMonthlySalaryPaymentChanging(value);
					this.SendPropertyChanging();
					this._MonthlySalaryPayment = value;
					this.SendPropertyChanged("MonthlySalaryPayment");
					this.OnMonthlySalaryPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffName", DbType="VarChar(200)")]
		public string StaffName
		{
			get
			{
				return this._StaffName;
			}
			set
			{
				if ((this._StaffName != value))
				{
					this.OnStaffNameChanging(value);
					this.SendPropertyChanging();
					this._StaffName = value;
					this.SendPropertyChanged("StaffName");
					this.OnStaffNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emergency", DbType="VarChar(200)")]
		public string Emergency
		{
			get
			{
				return this._Emergency;
			}
			set
			{
				if ((this._Emergency != value))
				{
					this.OnEmergencyChanging(value);
					this.SendPropertyChanging();
					this._Emergency = value;
					this.SendPropertyChanged("Emergency");
					this.OnEmergencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyBenefit", DbType="VarChar(200)")]
		public string MonthlyBenefit
		{
			get
			{
				return this._MonthlyBenefit;
			}
			set
			{
				if ((this._MonthlyBenefit != value))
				{
					this.OnMonthlyBenefitChanging(value);
					this.SendPropertyChanging();
					this._MonthlyBenefit = value;
					this.SendPropertyChanged("MonthlyBenefit");
					this.OnMonthlyBenefitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allowance", DbType="VarChar(200)")]
		public string Allowance
		{
			get
			{
				return this._Allowance;
			}
			set
			{
				if ((this._Allowance != value))
				{
					this.OnAllowanceChanging(value);
					this.SendPropertyChanging();
					this._Allowance = value;
					this.SendPropertyChanged("Allowance");
					this.OnAllowanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergencyNeed", DbType="VarChar(200)")]
		public string EmergencyNeed
		{
			get
			{
				return this._EmergencyNeed;
			}
			set
			{
				if ((this._EmergencyNeed != value))
				{
					this.OnEmergencyNeedChanging(value);
					this.SendPropertyChanging();
					this._EmergencyNeed = value;
					this.SendPropertyChanged("EmergencyNeed");
					this.OnEmergencyNeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(200)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="VarChar(50)")]
		public string Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DormantAccount")]
	public partial class DormantAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CustomerId;
		
		private string _Branch;
		
		private string _FieldOfficer;
		
		private string _AccountNo;
		
		private string _PageNumber;
		
		private string _Date;
		
		private string _PhoneNo;
		
		private string _BankCharge;
		
		private string _PostedBy;
		
		private string _AccountType;
		
		private System.Nullable<double> _AccountBalance;
		
		private string _AllNumber;
		
		private string _NoOfMonth;
		
		private string _Coment;
		
		private string _MaturityDate;
		
		private string _Interest;
		
		private string _Month;
		
		private string _Year;
		
		private string _Amount;
		
		private string _InterestPercent;
		
		private string _Months;
		
		private string _Dates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnPageNumberChanging(string value);
    partial void OnPageNumberChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnBankChargeChanging(string value);
    partial void OnBankChargeChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnAccountBalanceChanging(System.Nullable<double> value);
    partial void OnAccountBalanceChanged();
    partial void OnAllNumberChanging(string value);
    partial void OnAllNumberChanged();
    partial void OnNoOfMonthChanging(string value);
    partial void OnNoOfMonthChanged();
    partial void OnComentChanging(string value);
    partial void OnComentChanged();
    partial void OnMaturityDateChanging(string value);
    partial void OnMaturityDateChanged();
    partial void OnInterestChanging(string value);
    partial void OnInterestChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnInterestPercentChanging(string value);
    partial void OnInterestPercentChanged();
    partial void OnMonthsChanging(string value);
    partial void OnMonthsChanged();
    partial void OnDatesChanging(string value);
    partial void OnDatesChanged();
    #endregion
		
		public DormantAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="VarChar(200)")]
		public string CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(200)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNumber", DbType="VarChar(200)")]
		public string PageNumber
		{
			get
			{
				return this._PageNumber;
			}
			set
			{
				if ((this._PageNumber != value))
				{
					this.OnPageNumberChanging(value);
					this.SendPropertyChanging();
					this._PageNumber = value;
					this.SendPropertyChanged("PageNumber");
					this.OnPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(200)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCharge", DbType="VarChar(200)")]
		public string BankCharge
		{
			get
			{
				return this._BankCharge;
			}
			set
			{
				if ((this._BankCharge != value))
				{
					this.OnBankChargeChanging(value);
					this.SendPropertyChanging();
					this._BankCharge = value;
					this.SendPropertyChanged("BankCharge");
					this.OnBankChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(200)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(200)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="Float")]
		public System.Nullable<double> AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllNumber", DbType="VarChar(200)")]
		public string AllNumber
		{
			get
			{
				return this._AllNumber;
			}
			set
			{
				if ((this._AllNumber != value))
				{
					this.OnAllNumberChanging(value);
					this.SendPropertyChanging();
					this._AllNumber = value;
					this.SendPropertyChanged("AllNumber");
					this.OnAllNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfMonth", DbType="VarChar(200)")]
		public string NoOfMonth
		{
			get
			{
				return this._NoOfMonth;
			}
			set
			{
				if ((this._NoOfMonth != value))
				{
					this.OnNoOfMonthChanging(value);
					this.SendPropertyChanging();
					this._NoOfMonth = value;
					this.SendPropertyChanged("NoOfMonth");
					this.OnNoOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coment", DbType="VarChar(200)")]
		public string Coment
		{
			get
			{
				return this._Coment;
			}
			set
			{
				if ((this._Coment != value))
				{
					this.OnComentChanging(value);
					this.SendPropertyChanging();
					this._Coment = value;
					this.SendPropertyChanged("Coment");
					this.OnComentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="VarChar(200)")]
		public string MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="VarChar(200)")]
		public string Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(200)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(200)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(200)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestPercent", DbType="VarChar(200)")]
		public string InterestPercent
		{
			get
			{
				return this._InterestPercent;
			}
			set
			{
				if ((this._InterestPercent != value))
				{
					this.OnInterestPercentChanging(value);
					this.SendPropertyChanging();
					this._InterestPercent = value;
					this.SendPropertyChanged("InterestPercent");
					this.OnInterestPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="VarChar(200)")]
		public string Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dates", DbType="VarChar(200)")]
		public string Dates
		{
			get
			{
				return this._Dates;
			}
			set
			{
				if ((this._Dates != value))
				{
					this.OnDatesChanging(value);
					this.SendPropertyChanging();
					this._Dates = value;
					this.SendPropertyChanged("Dates");
					this.OnDatesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Performance")]
	public partial class Performance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Deposite;
		
		private string _Withdraw;
		
		private string _Inventory;
		
		private string _MonthYear;
		
		private string _Date;
		
		private string _AdminOfficer;
		
		private string _Profit;
		
		private string _TotalProfit;
		
		private string _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDepositeChanging(string value);
    partial void OnDepositeChanged();
    partial void OnWithdrawChanging(string value);
    partial void OnWithdrawChanged();
    partial void OnInventoryChanging(string value);
    partial void OnInventoryChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAdminOfficerChanging(string value);
    partial void OnAdminOfficerChanged();
    partial void OnProfitChanging(string value);
    partial void OnProfitChanged();
    partial void OnTotalProfitChanging(string value);
    partial void OnTotalProfitChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    #endregion
		
		public Performance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deposite", DbType="VarChar(120)")]
		public string Deposite
		{
			get
			{
				return this._Deposite;
			}
			set
			{
				if ((this._Deposite != value))
				{
					this.OnDepositeChanging(value);
					this.SendPropertyChanging();
					this._Deposite = value;
					this.SendPropertyChanged("Deposite");
					this.OnDepositeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Withdraw", DbType="VarChar(120)")]
		public string Withdraw
		{
			get
			{
				return this._Withdraw;
			}
			set
			{
				if ((this._Withdraw != value))
				{
					this.OnWithdrawChanging(value);
					this.SendPropertyChanging();
					this._Withdraw = value;
					this.SendPropertyChanged("Withdraw");
					this.OnWithdrawChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="VarChar(120)")]
		public string Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this.OnInventoryChanging(value);
					this.SendPropertyChanging();
					this._Inventory = value;
					this.SendPropertyChanged("Inventory");
					this.OnInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(120)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminOfficer", DbType="VarChar(120)")]
		public string AdminOfficer
		{
			get
			{
				return this._AdminOfficer;
			}
			set
			{
				if ((this._AdminOfficer != value))
				{
					this.OnAdminOfficerChanging(value);
					this.SendPropertyChanging();
					this._AdminOfficer = value;
					this.SendPropertyChanged("AdminOfficer");
					this.OnAdminOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="VarChar(120)")]
		public string Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalProfit", DbType="VarChar(120)")]
		public string TotalProfit
		{
			get
			{
				return this._TotalProfit;
			}
			set
			{
				if ((this._TotalProfit != value))
				{
					this.OnTotalProfitChanging(value);
					this.SendPropertyChanging();
					this._TotalProfit = value;
					this.SendPropertyChanged("TotalProfit");
					this.OnTotalProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(150)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deposite")]
	public partial class Deposite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CustomerId;
		
		private string _Branch;
		
		private string _FieldOfficer;
		
		private string _AccountNo;
		
		private string _PageNumber;
		
		private string _Date;
		
		private System.Nullable<double> _Deposite1;
		
		private string _PhoneNo;
		
		private string _ChartNo;
		
		private string _PostedBy;
		
		private System.Nullable<double> _AccountBalance;
		
		private string _SMSCharge;
		
		private string _MonthYear;
		
		private string _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnPageNumberChanging(string value);
    partial void OnPageNumberChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnDeposite1Changing(System.Nullable<double> value);
    partial void OnDeposite1Changed();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnChartNoChanging(string value);
    partial void OnChartNoChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnAccountBalanceChanging(System.Nullable<double> value);
    partial void OnAccountBalanceChanged();
    partial void OnSMSChargeChanging(string value);
    partial void OnSMSChargeChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    #endregion
		
		public Deposite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="VarChar(200)")]
		public string CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(200)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNumber", DbType="VarChar(200)")]
		public string PageNumber
		{
			get
			{
				return this._PageNumber;
			}
			set
			{
				if ((this._PageNumber != value))
				{
					this.OnPageNumberChanging(value);
					this.SendPropertyChanging();
					this._PageNumber = value;
					this.SendPropertyChanged("PageNumber");
					this.OnPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Deposite", Storage="_Deposite1", DbType="Float")]
		public System.Nullable<double> Deposite1
		{
			get
			{
				return this._Deposite1;
			}
			set
			{
				if ((this._Deposite1 != value))
				{
					this.OnDeposite1Changing(value);
					this.SendPropertyChanging();
					this._Deposite1 = value;
					this.SendPropertyChanged("Deposite1");
					this.OnDeposite1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(200)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChartNo", DbType="VarChar(200)")]
		public string ChartNo
		{
			get
			{
				return this._ChartNo;
			}
			set
			{
				if ((this._ChartNo != value))
				{
					this.OnChartNoChanging(value);
					this.SendPropertyChanging();
					this._ChartNo = value;
					this.SendPropertyChanged("ChartNo");
					this.OnChartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(200)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="Float")]
		public System.Nullable<double> AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SMSCharge", DbType="VarChar(200)")]
		public string SMSCharge
		{
			get
			{
				return this._SMSCharge;
			}
			set
			{
				if ((this._SMSCharge != value))
				{
					this.OnSMSChargeChanging(value);
					this.SendPropertyChanging();
					this._SMSCharge = value;
					this.SendPropertyChanged("SMSCharge");
					this.OnSMSChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(200)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(150)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	public partial class Inventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Year;
		
		private string _ListOfInventory;
		
		private string _FieldOfficer;
		
		private string _Amount;
		
		private string _Month;
		
		private string _Dates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnListOfInventoryChanging(string value);
    partial void OnListOfInventoryChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnDatesChanging(string value);
    partial void OnDatesChanged();
    #endregion
		
		public Inventory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(200)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListOfInventory", DbType="VarChar(200)")]
		public string ListOfInventory
		{
			get
			{
				return this._ListOfInventory;
			}
			set
			{
				if ((this._ListOfInventory != value))
				{
					this.OnListOfInventoryChanging(value);
					this.SendPropertyChanging();
					this._ListOfInventory = value;
					this.SendPropertyChanged("ListOfInventory");
					this.OnListOfInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(200)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(200)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dates", DbType="VarChar(200)")]
		public string Dates
		{
			get
			{
				return this._Dates;
			}
			set
			{
				if ((this._Dates != value))
				{
					this.OnDatesChanging(value);
					this.SendPropertyChanging();
					this._Dates = value;
					this.SendPropertyChanged("Dates");
					this.OnDatesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FreezAcount")]
	public partial class FreezAcount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _FreezAccountNo;
		
		private string _AccountBalance;
		
		private string _AccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFreezAccountNoChanging(string value);
    partial void OnFreezAccountNoChanged();
    partial void OnAccountBalanceChanging(string value);
    partial void OnAccountBalanceChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    #endregion
		
		public FreezAcount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreezAccountNo", DbType="VarChar(120)")]
		public string FreezAccountNo
		{
			get
			{
				return this._FreezAccountNo;
			}
			set
			{
				if ((this._FreezAccountNo != value))
				{
					this.OnFreezAccountNoChanging(value);
					this.SendPropertyChanging();
					this._FreezAccountNo = value;
					this.SendPropertyChanged("FreezAccountNo");
					this.OnFreezAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="VarChar(120)")]
		public string AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(150)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactProfit2")]
	public partial class TransactProfit2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MonthProfit;
		
		private string _Date;
		
		private string _Year;
		
		private string _Month;
		
		private string _AccountNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMonthProfitChanging(string value);
    partial void OnMonthProfitChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    #endregion
		
		public TransactProfit2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthProfit", DbType="VarChar(120)")]
		public string MonthProfit
		{
			get
			{
				return this._MonthProfit;
			}
			set
			{
				if ((this._MonthProfit != value))
				{
					this.OnMonthProfitChanging(value);
					this.SendPropertyChanging();
					this._MonthProfit = value;
					this.SendPropertyChanged("MonthProfit");
					this.OnMonthProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(120)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(120)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.YearlyProfit")]
	public partial class YearlyProfit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _YearGain;
		
		private string _Date;
		
		private string _Year;
		
		private string _Month;
		
		private string _AccountNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnYearGainChanging(string value);
    partial void OnYearGainChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    #endregion
		
		public YearlyProfit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearGain", DbType="VarChar(120)")]
		public string YearGain
		{
			get
			{
				return this._YearGain;
			}
			set
			{
				if ((this._YearGain != value))
				{
					this.OnYearGainChanging(value);
					this.SendPropertyChanging();
					this._YearGain = value;
					this.SendPropertyChanged("YearGain");
					this.OnYearGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(120)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(120)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(120)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewAcount")]
	public partial class NewAcount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CustomerId;
		
		private string _Branch;
		
		private string _FieldOfficer;
		
		private System.Nullable<double> _AccountNo;
		
		private System.Nullable<double> _PageNumber;
		
		private string _Date;
		
		private string _PhoneNo;
		
		private string _BankCharge;
		
		private string _PostedBy;
		
		private string _AccountType;
		
		private System.Nullable<double> _AccountBalance;
		
		private System.Nullable<int> _SmsId;
		
		private string _Coment;
		
		private string _MaturityDate;
		
		private string _NoOfMonth;
		
		private string _Interest;
		
		private string _Month;
		
		private string _Year;
		
		private string _Amount;
		
		private string _InterestPercent;
		
		private string _Months;
		
		private string _Dates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnAccountNoChanging(System.Nullable<double> value);
    partial void OnAccountNoChanged();
    partial void OnPageNumberChanging(System.Nullable<double> value);
    partial void OnPageNumberChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnBankChargeChanging(string value);
    partial void OnBankChargeChanged();
    partial void OnPostedByChanging(string value);
    partial void OnPostedByChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnAccountBalanceChanging(System.Nullable<double> value);
    partial void OnAccountBalanceChanged();
    partial void OnSmsIdChanging(System.Nullable<int> value);
    partial void OnSmsIdChanged();
    partial void OnComentChanging(string value);
    partial void OnComentChanged();
    partial void OnMaturityDateChanging(string value);
    partial void OnMaturityDateChanged();
    partial void OnNoOfMonthChanging(string value);
    partial void OnNoOfMonthChanged();
    partial void OnInterestChanging(string value);
    partial void OnInterestChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnInterestPercentChanging(string value);
    partial void OnInterestPercentChanged();
    partial void OnMonthsChanging(string value);
    partial void OnMonthsChanged();
    partial void OnDatesChanging(string value);
    partial void OnDatesChanged();
    #endregion
		
		public NewAcount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="VarChar(200)")]
		public string CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(200)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="Float")]
		public System.Nullable<double> AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNumber", DbType="Float")]
		public System.Nullable<double> PageNumber
		{
			get
			{
				return this._PageNumber;
			}
			set
			{
				if ((this._PageNumber != value))
				{
					this.OnPageNumberChanging(value);
					this.SendPropertyChanging();
					this._PageNumber = value;
					this.SendPropertyChanged("PageNumber");
					this.OnPageNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200)")]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(200)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCharge", DbType="VarChar(200)")]
		public string BankCharge
		{
			get
			{
				return this._BankCharge;
			}
			set
			{
				if ((this._BankCharge != value))
				{
					this.OnBankChargeChanging(value);
					this.SendPropertyChanging();
					this._BankCharge = value;
					this.SendPropertyChanged("BankCharge");
					this.OnBankChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedBy", DbType="VarChar(200)")]
		public string PostedBy
		{
			get
			{
				return this._PostedBy;
			}
			set
			{
				if ((this._PostedBy != value))
				{
					this.OnPostedByChanging(value);
					this.SendPropertyChanging();
					this._PostedBy = value;
					this.SendPropertyChanged("PostedBy");
					this.OnPostedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(200)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="Float")]
		public System.Nullable<double> AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsId", DbType="Int")]
		public System.Nullable<int> SmsId
		{
			get
			{
				return this._SmsId;
			}
			set
			{
				if ((this._SmsId != value))
				{
					this.OnSmsIdChanging(value);
					this.SendPropertyChanging();
					this._SmsId = value;
					this.SendPropertyChanged("SmsId");
					this.OnSmsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Coment", DbType="VarChar(200)")]
		public string Coment
		{
			get
			{
				return this._Coment;
			}
			set
			{
				if ((this._Coment != value))
				{
					this.OnComentChanging(value);
					this.SendPropertyChanging();
					this._Coment = value;
					this.SendPropertyChanged("Coment");
					this.OnComentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="VarChar(200)")]
		public string MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfMonth", DbType="VarChar(200)")]
		public string NoOfMonth
		{
			get
			{
				return this._NoOfMonth;
			}
			set
			{
				if ((this._NoOfMonth != value))
				{
					this.OnNoOfMonthChanging(value);
					this.SendPropertyChanging();
					this._NoOfMonth = value;
					this.SendPropertyChanged("NoOfMonth");
					this.OnNoOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="VarChar(200)")]
		public string Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(200)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(200)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(200)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestPercent", DbType="VarChar(200)")]
		public string InterestPercent
		{
			get
			{
				return this._InterestPercent;
			}
			set
			{
				if ((this._InterestPercent != value))
				{
					this.OnInterestPercentChanging(value);
					this.SendPropertyChanging();
					this._InterestPercent = value;
					this.SendPropertyChanged("InterestPercent");
					this.OnInterestPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="VarChar(200)")]
		public string Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dates", DbType="VarChar(200)")]
		public string Dates
		{
			get
			{
				return this._Dates;
			}
			set
			{
				if ((this._Dates != value))
				{
					this.OnDatesChanging(value);
					this.SendPropertyChanging();
					this._Dates = value;
					this.SendPropertyChanged("Dates");
					this.OnDatesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuckFixedSMS1")]
	public partial class BuckFixedSMS1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _customerid;
		
		private string _msg;
		
		private string _accountno;
		
		private string _phoneno;
		
		private System.Nullable<double> _depositebalance;
		
		private string _date;
		
		private System.Nullable<double> _depositecollect;
		
		private string _month;
		
		private string _smsid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomeridChanging(string value);
    partial void OncustomeridChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnaccountnoChanging(string value);
    partial void OnaccountnoChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OndepositebalanceChanging(System.Nullable<double> value);
    partial void OndepositebalanceChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OndepositecollectChanging(System.Nullable<double> value);
    partial void OndepositecollectChanged();
    partial void OnmonthChanging(string value);
    partial void OnmonthChanged();
    partial void OnsmsidChanging(string value);
    partial void OnsmsidChanged();
    #endregion
		
		public BuckFixedSMS1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerid", DbType="VarChar(200)")]
		public string customerid
		{
			get
			{
				return this._customerid;
			}
			set
			{
				if ((this._customerid != value))
				{
					this.OncustomeridChanging(value);
					this.SendPropertyChanging();
					this._customerid = value;
					this.SendPropertyChanged("customerid");
					this.OncustomeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg", DbType="VarChar(200)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountno", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string accountno
		{
			get
			{
				return this._accountno;
			}
			set
			{
				if ((this._accountno != value))
				{
					this.OnaccountnoChanging(value);
					this.SendPropertyChanging();
					this._accountno = value;
					this.SendPropertyChanged("accountno");
					this.OnaccountnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(200)")]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositebalance", DbType="Float")]
		public System.Nullable<double> depositebalance
		{
			get
			{
				return this._depositebalance;
			}
			set
			{
				if ((this._depositebalance != value))
				{
					this.OndepositebalanceChanging(value);
					this.SendPropertyChanging();
					this._depositebalance = value;
					this.SendPropertyChanged("depositebalance");
					this.OndepositebalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(200)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositecollect", DbType="Float")]
		public System.Nullable<double> depositecollect
		{
			get
			{
				return this._depositecollect;
			}
			set
			{
				if ((this._depositecollect != value))
				{
					this.OndepositecollectChanging(value);
					this.SendPropertyChanging();
					this._depositecollect = value;
					this.SendPropertyChanged("depositecollect");
					this.OndepositecollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="VarChar(200)")]
		public string month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smsid", DbType="VarChar(200)")]
		public string smsid
		{
			get
			{
				return this._smsid;
			}
			set
			{
				if ((this._smsid != value))
				{
					this.OnsmsidChanging(value);
					this.SendPropertyChanging();
					this._smsid = value;
					this.SendPropertyChanged("smsid");
					this.OnsmsidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsProfit")]
	public partial class SmsProfit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AcctNo;
		
		private string _SmsPrice;
		
		private string _Date;
		
		private string _AcctType;
		
		private string _MonthYear;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAcctNoChanging(string value);
    partial void OnAcctNoChanged();
    partial void OnSmsPriceChanging(string value);
    partial void OnSmsPriceChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnAcctTypeChanging(string value);
    partial void OnAcctTypeChanged();
    partial void OnMonthYearChanging(string value);
    partial void OnMonthYearChanged();
    #endregion
		
		public SmsProfit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctNo", DbType="VarChar(200)")]
		public string AcctNo
		{
			get
			{
				return this._AcctNo;
			}
			set
			{
				if ((this._AcctNo != value))
				{
					this.OnAcctNoChanging(value);
					this.SendPropertyChanging();
					this._AcctNo = value;
					this.SendPropertyChanged("AcctNo");
					this.OnAcctNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsPrice", DbType="VarChar(200)")]
		public string SmsPrice
		{
			get
			{
				return this._SmsPrice;
			}
			set
			{
				if ((this._SmsPrice != value))
				{
					this.OnSmsPriceChanging(value);
					this.SendPropertyChanging();
					this._SmsPrice = value;
					this.SendPropertyChanged("SmsPrice");
					this.OnSmsPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcctType", DbType="VarChar(200)")]
		public string AcctType
		{
			get
			{
				return this._AcctType;
			}
			set
			{
				if ((this._AcctType != value))
				{
					this.OnAcctTypeChanging(value);
					this.SendPropertyChanging();
					this._AcctType = value;
					this.SendPropertyChanged("AcctType");
					this.OnAcctTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthYear", DbType="VarChar(150)")]
		public string MonthYear
		{
			get
			{
				return this._MonthYear;
			}
			set
			{
				if ((this._MonthYear != value))
				{
					this.OnMonthYearChanging(value);
					this.SendPropertyChanging();
					this._MonthYear = value;
					this.SendPropertyChanged("MonthYear");
					this.OnMonthYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BuckFixedSMS")]
	public partial class BuckFixedSM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _customerid;
		
		private string _msg;
		
		private string _accountno;
		
		private string _phoneno;
		
		private System.Nullable<double> _depositebalance;
		
		private string _date;
		
		private System.Nullable<double> _depositecollect;
		
		private string _smsCharge;
		
		private string _month;
		
		private string _Year;
		
		private string _sms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomeridChanging(string value);
    partial void OncustomeridChanged();
    partial void OnmsgChanging(string value);
    partial void OnmsgChanged();
    partial void OnaccountnoChanging(string value);
    partial void OnaccountnoChanged();
    partial void OnphonenoChanging(string value);
    partial void OnphonenoChanged();
    partial void OndepositebalanceChanging(System.Nullable<double> value);
    partial void OndepositebalanceChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    partial void OndepositecollectChanging(System.Nullable<double> value);
    partial void OndepositecollectChanged();
    partial void OnsmsChargeChanging(string value);
    partial void OnsmsChargeChanged();
    partial void OnmonthChanging(string value);
    partial void OnmonthChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnsmsChanging(string value);
    partial void OnsmsChanged();
    #endregion
		
		public BuckFixedSM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerid", DbType="VarChar(200)")]
		public string customerid
		{
			get
			{
				return this._customerid;
			}
			set
			{
				if ((this._customerid != value))
				{
					this.OncustomeridChanging(value);
					this.SendPropertyChanging();
					this._customerid = value;
					this.SendPropertyChanged("customerid");
					this.OncustomeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msg", DbType="VarChar(200)")]
		public string msg
		{
			get
			{
				return this._msg;
			}
			set
			{
				if ((this._msg != value))
				{
					this.OnmsgChanging(value);
					this.SendPropertyChanging();
					this._msg = value;
					this.SendPropertyChanged("msg");
					this.OnmsgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountno", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string accountno
		{
			get
			{
				return this._accountno;
			}
			set
			{
				if ((this._accountno != value))
				{
					this.OnaccountnoChanging(value);
					this.SendPropertyChanging();
					this._accountno = value;
					this.SendPropertyChanged("accountno");
					this.OnaccountnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneno", DbType="VarChar(200)")]
		public string phoneno
		{
			get
			{
				return this._phoneno;
			}
			set
			{
				if ((this._phoneno != value))
				{
					this.OnphonenoChanging(value);
					this.SendPropertyChanging();
					this._phoneno = value;
					this.SendPropertyChanged("phoneno");
					this.OnphonenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositebalance", DbType="Float")]
		public System.Nullable<double> depositebalance
		{
			get
			{
				return this._depositebalance;
			}
			set
			{
				if ((this._depositebalance != value))
				{
					this.OndepositebalanceChanging(value);
					this.SendPropertyChanging();
					this._depositebalance = value;
					this.SendPropertyChanged("depositebalance");
					this.OndepositebalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="VarChar(200)")]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_depositecollect", DbType="Float")]
		public System.Nullable<double> depositecollect
		{
			get
			{
				return this._depositecollect;
			}
			set
			{
				if ((this._depositecollect != value))
				{
					this.OndepositecollectChanging(value);
					this.SendPropertyChanging();
					this._depositecollect = value;
					this.SendPropertyChanged("depositecollect");
					this.OndepositecollectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smsCharge", DbType="VarChar(200)")]
		public string smsCharge
		{
			get
			{
				return this._smsCharge;
			}
			set
			{
				if ((this._smsCharge != value))
				{
					this.OnsmsChargeChanging(value);
					this.SendPropertyChanging();
					this._smsCharge = value;
					this.SendPropertyChanged("smsCharge");
					this.OnsmsChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="VarChar(200)")]
		public string month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(200)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sms", DbType="VarChar(50)")]
		public string sms
		{
			get
			{
				return this._sms;
			}
			set
			{
				if ((this._sms != value))
				{
					this.OnsmsChanging(value);
					this.SendPropertyChanging();
					this._sms = value;
					this.SendPropertyChanged("sms");
					this.OnsmsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contracts")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _CustomerId;
		
		private string _Branch;
		
		private string _FieldOfficer;
		
		private string _ManagementFee;
		
		private string _CustomerName;
		
		private string _ContractDate1;
		
		private string _ExpiringDate;
		
		private string _MaturityDate;
		
		private string _LoanAmount;
		
		private string _ApprovedDate;
		
		private string _ModeOfPayment;
		
		private string _CustomerAddress;
		
		private string _TypeOfBusiness;
		
		private string _CompanyAddress;
		
		private string _PurposeOfLoan;
		
		private string _PhoneNo;
		
		private string _Interest;
		
		private string _AccountType;
		
		private string _AccountNo;
		
		private string _InterestValue;
		
		private string _Year;
		
		private string _LoanCheck;
		
		private string _Deposite;
		
		private string _AccountBalance;
		
		private string _Propic;
		
		private string _Terminate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnFieldOfficerChanging(string value);
    partial void OnFieldOfficerChanged();
    partial void OnManagementFeeChanging(string value);
    partial void OnManagementFeeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnContractDate1Changing(string value);
    partial void OnContractDate1Changed();
    partial void OnExpiringDateChanging(string value);
    partial void OnExpiringDateChanged();
    partial void OnMaturityDateChanging(string value);
    partial void OnMaturityDateChanged();
    partial void OnLoanAmountChanging(string value);
    partial void OnLoanAmountChanged();
    partial void OnApprovedDateChanging(string value);
    partial void OnApprovedDateChanged();
    partial void OnModeOfPaymentChanging(string value);
    partial void OnModeOfPaymentChanged();
    partial void OnCustomerAddressChanging(string value);
    partial void OnCustomerAddressChanged();
    partial void OnTypeOfBusinessChanging(string value);
    partial void OnTypeOfBusinessChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnPurposeOfLoanChanging(string value);
    partial void OnPurposeOfLoanChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnInterestChanging(string value);
    partial void OnInterestChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnInterestValueChanging(string value);
    partial void OnInterestValueChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnLoanCheckChanging(string value);
    partial void OnLoanCheckChanged();
    partial void OnDepositeChanging(string value);
    partial void OnDepositeChanged();
    partial void OnAccountBalanceChanging(string value);
    partial void OnAccountBalanceChanged();
    partial void OnPropicChanging(string value);
    partial void OnPropicChanged();
    partial void OnTerminateChanging(string value);
    partial void OnTerminateChanged();
    #endregion
		
		public Contract()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="VarChar(120)")]
		public string CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(120)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOfficer", DbType="VarChar(120)")]
		public string FieldOfficer
		{
			get
			{
				return this._FieldOfficer;
			}
			set
			{
				if ((this._FieldOfficer != value))
				{
					this.OnFieldOfficerChanging(value);
					this.SendPropertyChanging();
					this._FieldOfficer = value;
					this.SendPropertyChanged("FieldOfficer");
					this.OnFieldOfficerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementFee", DbType="VarChar(120)")]
		public string ManagementFee
		{
			get
			{
				return this._ManagementFee;
			}
			set
			{
				if ((this._ManagementFee != value))
				{
					this.OnManagementFeeChanging(value);
					this.SendPropertyChanging();
					this._ManagementFee = value;
					this.SendPropertyChanged("ManagementFee");
					this.OnManagementFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(120)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate1", DbType="VarChar(120)")]
		public string ContractDate1
		{
			get
			{
				return this._ContractDate1;
			}
			set
			{
				if ((this._ContractDate1 != value))
				{
					this.OnContractDate1Changing(value);
					this.SendPropertyChanging();
					this._ContractDate1 = value;
					this.SendPropertyChanged("ContractDate1");
					this.OnContractDate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiringDate", DbType="VarChar(120)")]
		public string ExpiringDate
		{
			get
			{
				return this._ExpiringDate;
			}
			set
			{
				if ((this._ExpiringDate != value))
				{
					this.OnExpiringDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiringDate = value;
					this.SendPropertyChanged("ExpiringDate");
					this.OnExpiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="VarChar(120)")]
		public string MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="VarChar(120)")]
		public string LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="VarChar(120)")]
		public string ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModeOfPayment", DbType="VarChar(120)")]
		public string ModeOfPayment
		{
			get
			{
				return this._ModeOfPayment;
			}
			set
			{
				if ((this._ModeOfPayment != value))
				{
					this.OnModeOfPaymentChanging(value);
					this.SendPropertyChanging();
					this._ModeOfPayment = value;
					this.SendPropertyChanged("ModeOfPayment");
					this.OnModeOfPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="VarChar(120)")]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this.OnCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerAddress = value;
					this.SendPropertyChanged("CustomerAddress");
					this.OnCustomerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfBusiness", DbType="VarChar(120)")]
		public string TypeOfBusiness
		{
			get
			{
				return this._TypeOfBusiness;
			}
			set
			{
				if ((this._TypeOfBusiness != value))
				{
					this.OnTypeOfBusinessChanging(value);
					this.SendPropertyChanging();
					this._TypeOfBusiness = value;
					this.SendPropertyChanged("TypeOfBusiness");
					this.OnTypeOfBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="VarChar(120)")]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurposeOfLoan", DbType="VarChar(120)")]
		public string PurposeOfLoan
		{
			get
			{
				return this._PurposeOfLoan;
			}
			set
			{
				if ((this._PurposeOfLoan != value))
				{
					this.OnPurposeOfLoanChanging(value);
					this.SendPropertyChanging();
					this._PurposeOfLoan = value;
					this.SendPropertyChanged("PurposeOfLoan");
					this.OnPurposeOfLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="VarChar(120)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="VarChar(120)")]
		public string Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(120)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(120)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestValue", DbType="VarChar(120)")]
		public string InterestValue
		{
			get
			{
				return this._InterestValue;
			}
			set
			{
				if ((this._InterestValue != value))
				{
					this.OnInterestValueChanging(value);
					this.SendPropertyChanging();
					this._InterestValue = value;
					this.SendPropertyChanged("InterestValue");
					this.OnInterestValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(120)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCheck", DbType="VarChar(120)")]
		public string LoanCheck
		{
			get
			{
				return this._LoanCheck;
			}
			set
			{
				if ((this._LoanCheck != value))
				{
					this.OnLoanCheckChanging(value);
					this.SendPropertyChanging();
					this._LoanCheck = value;
					this.SendPropertyChanged("LoanCheck");
					this.OnLoanCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deposite", DbType="VarChar(120)")]
		public string Deposite
		{
			get
			{
				return this._Deposite;
			}
			set
			{
				if ((this._Deposite != value))
				{
					this.OnDepositeChanging(value);
					this.SendPropertyChanging();
					this._Deposite = value;
					this.SendPropertyChanged("Deposite");
					this.OnDepositeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="VarChar(120)")]
		public string AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Propic", DbType="VarChar(120)")]
		public string Propic
		{
			get
			{
				return this._Propic;
			}
			set
			{
				if ((this._Propic != value))
				{
					this.OnPropicChanging(value);
					this.SendPropertyChanging();
					this._Propic = value;
					this.SendPropertyChanged("Propic");
					this.OnPropicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terminate", DbType="VarChar(150)")]
		public string Terminate
		{
			get
			{
				return this._Terminate;
			}
			set
			{
				if ((this._Terminate != value))
				{
					this.OnTerminateChanging(value);
					this.SendPropertyChanging();
					this._Terminate = value;
					this.SendPropertyChanged("Terminate");
					this.OnTerminateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanInterest")]
	public partial class LoanInterest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _NoOfMonth;
		
		private string _LoanAmount;
		
		private string _MaturityDate;
		
		private string _Interest;
		
		private string _ContractNo;
		
		private string _CustomerName;
		
		private string _ManagementFee;
		
		private string _Month;
		
		private string _AccountBalance;
		
		private string _AccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNoOfMonthChanging(string value);
    partial void OnNoOfMonthChanged();
    partial void OnLoanAmountChanging(string value);
    partial void OnLoanAmountChanged();
    partial void OnMaturityDateChanging(string value);
    partial void OnMaturityDateChanged();
    partial void OnInterestChanging(string value);
    partial void OnInterestChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnManagementFeeChanging(string value);
    partial void OnManagementFeeChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnAccountBalanceChanging(string value);
    partial void OnAccountBalanceChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    #endregion
		
		public LoanInterest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfMonth", DbType="VarChar(200)")]
		public string NoOfMonth
		{
			get
			{
				return this._NoOfMonth;
			}
			set
			{
				if ((this._NoOfMonth != value))
				{
					this.OnNoOfMonthChanging(value);
					this.SendPropertyChanging();
					this._NoOfMonth = value;
					this.SendPropertyChanged("NoOfMonth");
					this.OnNoOfMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="VarChar(200)")]
		public string LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="VarChar(200)")]
		public string Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(200)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(200)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementFee", DbType="VarChar(200)")]
		public string ManagementFee
		{
			get
			{
				return this._ManagementFee;
			}
			set
			{
				if ((this._ManagementFee != value))
				{
					this.OnManagementFeeChanging(value);
					this.SendPropertyChanging();
					this._ManagementFee = value;
					this.SendPropertyChanged("ManagementFee");
					this.OnManagementFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="VarChar(200)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="VarChar(200)")]
		public string AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(200)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
